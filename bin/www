#!/usr/bin/env node

/**
* Module dependencies.
*/

// express var
var app = require('../app');
var debug = require('debug')('project-shield:server');
var http = require('http');

// npm plugins var
var firebase = require('firebase');
var linebot = require('linebot');
var apiai = require('apiai');
var fs = require('fs');
var ticket = {} ;
var unirest = require('unirest');
var MessengerPlatform = require('facebook-bot-messenger');
var API_KEY = "VAxM08x35ThAOEqIgvOF";
var FD_ENDPOINT = "fongyu";

// Get port from environment and store in Express.
var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);
//Create HTTP server.
var server = http.createServer(app);
const io = require('socket.io').listen(server);
// Listen on provided port, on all network interfaces.
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

//config
var apiai_app = apiai('a84ed63ae3914a1fb4601f2824d4cabd');
var fb_bot = MessengerPlatform.create({
  pageID: '1505268191222395',
  appID: '472206313149798',
  appSecret: '64f066580f1118cce5277483865680f9',
  validationToken: '8d651e7bf52b3f923d099302268b8893',
  pageToken: 'EAAGteBmOVWYBAJShzsZADFojyn9RzSkZC085RXHG4XZCe1ZAYXQ89HcHgUQR7z2ZAfvJ2MJT0nXqGOmeQDooK0FMNk7K1BLJHJ8KUlyI33dcUg221mLr5Ft6GYDQBQ6d5C8pvqy27flm7VNYShR8PAW4mF4bo09Vn90zdNY53tYLT9LeiesXG'
});
  var config = {
    apiKey: "AIzaSyAr1ic8lr_asYZTwwIjBNp3uiqFdu1QJKI",
    authDomain: "shield-dev-91210.firebaseapp.com",
    databaseURL: "https://shield-dev-91210.firebaseio.com",
    projectId: "shield-dev-91210",
    storageBucket: "shield-dev-91210.appspot.com",
    messagingSenderId: "514816655617"
  };
firebase.initializeApp(config);

//firebase var
const agentDBRef = firebase.database().ref().child('chats/AgentChatData');
var agentChatData;
agentDBRef.on('value', snapshot=> {
  agentChatData = snapshot.val();
  console.log("agent chat loaded");
});

const newDBRef = firebase.database().ref().child('chats/Data');
var chatData;
newDBRef.on('value', snapshot=> {
  chatData = snapshot.val();
  console.log("chat data loading complete!");
});

const tagsRef = firebase.database().ref().child('tags');
var tagsData;
tagsRef.on('value', snapshot=> {
  tagsData = snapshot.val().Data;
  console.log("tags data loading complete!");
  // ...
});


var users = {};
var agent_nickname = 'agent';

// LINE bot設定
var bot = [];
var linebotParser = [
  function() {
    console.log("Enter channel_1 information first");
  },
  function() {
    console.log("Enter channel_2 information first");
  }
];
// var newDBRef = [null, null];
var channelIds = [-1, -1];

//yelp-search
const yelp = require('yelp-fusion');
const yelp_id = 'myyIL1Ms5JszMcXodC-o_w';
const yelp_secret = 'Zw94mu0DGLFSmjG2at4wqSpdxtUC9TrWn6yVYUNhpLEpj4C11tzAPblLXRhpsRLh';
var yelp_token;
const token = yelp.accessToken(yelp_id, yelp_secret).then(response => {
    console.log(response.jsonBody.access_token);
    yelp_token = response.jsonBody.access_token;
}).catch(e => {
    console.log(e);
});
var z;
var z2;
var z3;
var x;
var x2;
var x3;
var y;
var w;
var w1;
var w2;
var n;
//yelp-search
//抓日期
var Today = new Date();
var day_list = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'];
var day = Today.getDay();
var YY = Today.getFullYear();
var MM = (Today.getMonth() + 1);
var DD = Today.getDate();
var count = 0;

// for ticketing
var viewContact;
var viewAgent;
var viewTicket;

///////////////// 接收訊息 /////////////////
//==============FACEBOOK MESSAGE==============
app.post('/webhook', function (req, res) {
  var data = req.body;
  console.log('data on line 91');
  console.log(data);

  // Make sure this is a page subscription
  if (data.object === 'page') {

    // Iterate over each entry - there may be multiple if batched
    data.entry.forEach(function(entry) {
      var pageID = entry.id;
      var timeOfEvent = entry.time;

      // Iterate over each messaging event
      entry.messaging.forEach(function(event) {
        console.log('this is event');
        console.log(event);
        if (event.message) {
          console.log('Entered');
          loadFbProfile(event, event.sender.id);
        } else {
          console.log("Webhook received unknown event: ", event);
        }
      });
    });

    // Assume all went well.
    //
    // You must send back a 200, within 20 seconds, to let us know
    // you've successfully received the callback. Otherwise, the request
    // will time out and we will keep trying to resend.
    res.sendStatus(200);
  }else{
    console.log('on line 124');
  }
});//app.post
//==============FACEBOOK MESSAGE END==============



//==============LINE MESSAGE==============
function bot_on_message(event) {
  let channelId = this.options.channelId;
  // let firebaseDB = newDBRef[ channelIds.indexOf(channelId) ];
  // console.log("INDEX = "+channelIds.indexOf(channelId));

  // console.log(event);
  let message_type = event.message.type;
  let message_lineTochat = event.message.text;
  let receiverId = event.source.userId;
  let nowTime = Date.now();

  console.log('Line message in!');

  event.source.profile().then(function(profile) {
    // console.log(profile.pictureUrl);
    let receiver_name = profile.displayName;
    let pictureUrl = profile.pictureUrl;
    if( receiver_name===undefined ) receiver_name = "userName_undefined";
    console.log('current ID is: '+receiverId);
    console.log('current nickname is: '+receiver_name);

    var msgObj = {
      owner: "user",
      name: receiver_name,
      time: nowTime,
      message: "undefined_message"
    };


    //  ===================  KINDS ====================
    {
      if (message_type === 'sticker') {
        let packageId = event.message.packageId;
        let stickerId = event.message.stickerId;
        msgObj.message = '<img src="https://sdl-stickershop.line.naver.jp/stickershop/v1/sticker/'+stickerId+'/android/sticker.png"' +
        'width="20%" alt="sticker cant display!"/>';
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
      }
      else if (message_type === 'location') {
        console.log("location");
        msgObj.message = 'Location received: ';
        console.log(msgObj);
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        msgObj.message = event.message.address;
        console.log(msgObj);
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.message.content().then(function(content) {
          /*'base64'是圖片的編碼*/
          // console.log(content.toString('base64'));
          /*把編碼轉換成圖片(image/png)做成連結的方式*/
          let latitude = event.message.latitude;
          let longitude = event.message.longitude;
          msgObj.message = '<a target="_blank" href=" https://www.google.com.tw/maps/place/' + content.toString('base64')
          + '/@' + latitude + ',' + longitude + ',15z/data=!4m5!3m4!1s0x0:0x496596e7748a5757!8m2!3d'
          + latitude + '!4d' + longitude + '">LOCATION LINK</a>';
          console.log(msgObj);
          emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        }).catch(function(error) {
          // error
        });

        //yelp-search
        setTimeout(() => {
            const yelp_client = yelp.client(yelp_token);
            yelp_client.search({
                term: zxc, //餐廳種類
                locale: 'zh_TW', //語系
                location: address,
            }).then(response => {
                z = response.jsonBody.businesses[1].name;
                z2 = response.jsonBody.businesses[2].name;
                z3 = response.jsonBody.businesses[3].name;

                x = response.jsonBody.businesses[1].image_url;
                x2 = response.jsonBody.businesses[2].image_url;
                x3 = response.jsonBody.businesses[3].image_url;

                y = response.jsonBody.businesses[1].location.display_address;
                y2 = response.jsonBody.businesses[2].location.display_address;
                y3 = response.jsonBody.businesses[3].location.display_address;

                w = response.jsonBody.businesses[1].url;
                w2 = response.jsonBody.businesses[2].url;
                w3 = response.jsonBody.businesses[3].url;

                n = response.jsonBody.businesses[1].location;
                event.reply({
                    "type": "template",
                    "altText": "Welcome Template",
                    "template": {
                        type: 'carousel',
                        "columns": [{
                            "thumbnailImageUrl": x,
                            "title": z,
                            "text": y[0] + y[1], //抓陣列中所需要的值作為字串(因為這裡陣列會無法顯示)
                            "actions": [{
                                "type": 'uri',
                                "label": '觀看餐廳資訊',
                                "uri": w
                            }]
                        }, {
                            "thumbnailImageUrl": x2,
                            "title": z2,
                            "text": y2[0] + y2[1],
                            "actions": [{
                                "type": 'uri',
                                "label": '觀看餐廳資訊',
                                "uri": w2
                            }]
                        }, {
                            "thumbnailImageUrl": x3,
                            "title": z3,
                            "text": y3[0] + y3[1],
                            "actions": [{
                                "type": 'uri',
                                "label": '觀看餐廳資訊',
                                "uri": w3
                            }]
                        }]
                    }
                })
                console.log('z:' + z);
                console.log('x:' + x);
                console.log(n);
            }).catch(e => {
                console.log(e);
            });
        }, 3000);
        //yelp-search
      }
      else if (message_type === 'image') {
        msgObj.message = 'Image received. Please wait for the link below';
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.message.content().then(function(content) {
          /*'base64'是圖片的編碼*/
          // console.log(content.toString('base64'));
          /*把編碼轉換成圖片(image/png)做成連結的方式*/
          msgObj.message = '<a href="data:image/png;base64,' + content.toString('base64') + '" ' +
          ' target="_blank" ><img src="data:image/png;base64,' + content.toString('base64') + '" ' +
          'width="20%" alt="image embedded using base64 encoding!"/></a>';
          emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);

        }).catch(function(error) {
          // error
          console.log(error);
        });

      }
      else if (message_type === 'audio') {
        msgObj.message = 'Audio received. Please wait for the link below.';
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.message.content().then(function(content) {
          // console.log(content.toString('base64'));
          msgObj.message = '<audio controls><source src="data:audio/mp4;base64,' + content.toString('base64') + '" ' +
          '" type="audio/mp4"></audio>';
          emitIO_and_pushDB(msgObj);

        }).catch(function(error) {
          // error
          console.log(error);
        });
      }
      else if (message_type === 'video') {
        msgObj.message = 'Video received. Please wait for the link below.';
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);

        event.message.content().then(function(content) {
          // console.log(content.toString('base64'));
          msgObj.message = '<video width="20%" controls><source src="data:video/mp4;base64,' + content.toString('base64') + '" ' +
          '" type="video/mp4"></video>';
          emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);

        }).catch(function(error) {
          // error
          console.log(error);
        });
      }
      else if (message_type === 'text' && isUrl(message_lineTochat) ) { // 判斷連結
        let urlStr = '<a href=';
        if (message_lineTochat.indexOf('https') === -1 || message_lineTochat.indexOf('http') === -1) {
          urlStr += '"https://';
        }
        msgObj.message = urlStr + message_lineTochat + '/" target="_blank">' + message_lineTochat + '</a>';
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
      }
      else if (event.message.type === 'text' && message_lineTochat.trim() === '查詢地點DEMO') {
        let yelp = ('請選擇，你想查尋最近的地點的目標');
        msgObj.message = yelp;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": yelp,
                "text": " ",
                "actions": [{
                    "type": "message",
                    "label": "八方雲集",
                    "text": "八方雲集"
                }, {
                    "type": "message",
                    "label": "花旗銀行",
                    "text": "花旗銀行"
                }]
            }
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '八方雲集') {
        let yelp = ('感謝您使用挑餐廳的功能!\n傳送你的位置給我，便會告訴你最近的三家餐廳。');
        zxc = "八方雲集";
        msgObj.message = yelp;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: yelp
        }, {
            type: 'text',
            text: yelp
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '花旗銀行') {
        let yelp = ('感謝您使用挑餐廳的功能!\n傳送你的位置給我，便會告訴你最近的三家餐廳。');
        zxc = "花旗銀行";
        msgObj.message = yelp;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: yelp
        }, {
            type: 'text',
            text: yelp
        });
    }
    /*----------------------------------------------------旅遊------------------------------------------------------------*/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '旅遊') {
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": "查看國內外的旅遊資訊",
                "text": " ",
                "actions": [{
                    "type": "message",
                    "label": "國外旅遊",
                    "text": '國外旅遊'
                }, {
                    "type": "message",
                    "label": "國內旅遊",
                    "text": "國內旅遊"
                }]
            }
        });
    }
    /*----------------------------------------------------國外旅遊------------------------------------------------------------*/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '國外旅遊') {
        msgObj.message = "...";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '國外旅遊資訊介紹。',
                    "text": '請選擇以下行程，查詢行程費用以及相關資訊。',
                    "actions": [{
                        "type": "message",
                        "label": '斯洛維尼亞',
                        "text": "斯洛維尼亞",
                    }, {
                        "type": "message",
                        "label": '馬爾地夫',
                        "text": "馬爾地夫"
                    }, {
                        "type": "message",
                        "label": '埃及',
                        "text": "埃及"
                    }]
                }, {
                    "title": '國外旅遊資訊介紹。',
                    "text": '請選擇以下行程，查詢行程費用以及相關資訊。',
                    "actions": [{
                        "type": "message",
                        "label": '杜拜',
                        "text": "杜拜"
                    }, {
                        "type": "message",
                        "label": '紐西蘭',
                        "text": "紐西蘭"
                    }, {
                        "type": "message",
                        "label": '蒙古',
                        "text": "蒙古"
                    }]
                }]
            }
        })
    }
    else if (event.message.type === 'text' && message_lineTochat.trim() === '斯洛維尼亞') {
        let Slovenija = '斯洛維尼亞藍湖、克羅埃西亞十六湖公園 雙國湖景10天7夜仙境之旅';
        msgObj.message = Slovenija;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": Slovenija,
                "text": " ",
                "actions": [{
                    "type": "uri",
                    "label": "旅程介紹",
                    "uri": 'https://tw.taiwanviptravel.com/croatia/'
                }, {
                    "type": "uri",
                    "label": "報名",
                    "uri": "https://tw.taiwanviptravel.com/croatia/#tourlist"
                }]
            }
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '馬爾地夫') {
        let Maldives = '馬爾地夫OZEN奧臻島渡假村、海底餐廳饗宴、6天4夜浪漫海島之旅';
        msgObj.message = Maldives;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": Maldives,
                "text": " ",
                "actions": [{
                    "type": "uri",
                    "label": "旅程介紹",
                    "uri": 'https://tw.taiwanviptravel.com/maldives-ozen/'
                }, {
                    "type": "uri",
                    "label": "報名",
                    "uri": "https://tw.taiwanviptravel.com/maldives-ozen/#tourlist"
                }]
            }
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '埃及') {
        let egypt = '神秘金字塔、開羅會議百年皇宮、河輪漫遊尼羅河13天10夜埃及尋寶之旅';
        msgObj.message = egypt;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": egypt,
                "text": " ",
                "actions": [{
                    "type": "uri",
                    "label": "旅程介紹",
                    "uri": 'https://tw.taiwanviptravel.com/egypt/'
                }, {
                    "type": "uri",
                    "label": "報名",
                    "uri": "https://tw.taiwanviptravel.com/egypt/#tourlist"
                }]
            }
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '杜拜') {
        let dubai = '遊杜拜、阿布達比 水上飛機、沙漠衝沙、住帆船飯店8天5夜鑽石黃金之旅';
        msgObj.message = dubai;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": dubai,
                "text": " ",
                "actions": [{
                    "type": "uri",
                    "label": "旅程介紹",
                    "uri": 'https://tw.taiwanviptravel.com/dubai3/'
                }, {
                    "type": "uri",
                    "label": "報名",
                    "uri": "https://tw.taiwanviptravel.com/dubai3/#tourlist"
                }]
            }
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '紐西蘭') {
        let newzealand = '紐西蘭峽灣美景、螢火蟲洞遊船、夜遊魔戒哈比屯11天8夜南北島奇幻之旅';
        msgObj.message = newzealand;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": newzealand,
                "text": " ",
                "actions": [{
                    "type": "uri",
                    "label": "旅程介紹",
                    "uri": 'https://tw.taiwanviptravel.com/newzealand/'
                }, {
                    "type": "uri",
                    "label": "報名",
                    "uri": "https://tw.taiwanviptravel.com/newzealand/#tourlist"
                }]
            }
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '蒙古') {
        let mongolia8d = '蒙古烏蘭巴托、巴彥戈壁、成吉思汗8天7夜游牧驚奇之旅（蒙古航空）';
        msgObj.message = mongolia8d;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": mongolia8d,
                "text": " ",
                "actions": [{
                    "type": "uri",
                    "label": "旅程介紹",
                    "uri": 'https://tw.taiwanviptravel.com/mongolia8d/'
                }, {
                    "type": "uri",
                    "label": "報名",
                    "uri": "https://tw.taiwanviptravel.com/mongolia8d/#tourlist"
                }]
            }
        });
    }
    /*----------------------------------------------------公司資訊------------------------------------------------------------*/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '公司資訊') {
        let company = '希羅亞旅行社股份有限公司\n地址:\n台灣台北市大安區\n復興南路一段137號7樓之7\n服務時間:\n週一～週五 09:00-18:30\n電話:02-27217300\n傳真:02-27217179\n信箱:service@taiwanday.com\n代表人:戴東華\n聯絡人:劉淑枚';
        msgObj.message = company;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: company
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '國內旅遊') {
      msgObj.message = '...';
      emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '國內旅遊資訊介紹。',
                    "text": '請選擇以下行程，查詢行程費用以及相關資訊。',
                    "actions": [{
                        "type": "message",
                        "label": '台南、奇美博物館',
                        "text": "台南、奇美博物館",
                    }, {
                        "type": "message",
                        "label": '溪頭、杉林溪、米堤飯店',
                        "text": "溪頭、杉林溪、米堤飯店"
                    }, {
                        "type": "message",
                        "label": '花東桂田喜來登',
                        "text": "花東桂田喜來登"
                    }]
                }]
            }
        })
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '台南、奇美博物館') {
        let tainan = '台南、奇美博物館商務豪華驚奇之旅2天1夜';
        msgObj.message = tainan;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": tainan,
                "text": " ",
                "actions": [{
                    "type": "uri",
                    "label": "旅程介紹",
                    "uri": 'https://tw.taiwanviptravel.com/tainan/'
                }, {
                    "type": "uri",
                    "label": "報名",
                    "uri": "https://tw.taiwanviptravel.com/tainan/#tourlist"
                }]
            }
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '溪頭、杉林溪、米堤飯店') {
        let nantou = '溪頭、杉林溪、米堤飯店商務豪華之旅2天1夜';
        msgObj.message = nantou;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": nantou,
                "text": " ",
                "actions": [{
                    "type": "uri",
                    "label": "旅程介紹",
                    "uri": 'https://tw.taiwanviptravel.com/nantou/'
                }, {
                    "type": "uri",
                    "label": "報名",
                    "uri": "https://tw.taiwanviptravel.com/nantou/#tourlist"
                }]
            }
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '花東桂田喜來登') {
        let hualientaitung = '花東桂田喜來登尊爵之旅3天2夜';
        msgObj.message = hualientaitung;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": hualientaitung,
                "text": " ",
                "actions": [{
                    "type": "uri",
                    "label": "旅程介紹",
                    "uri": 'https://tw.taiwanviptravel.com/hualien-taitung/#train'
                }, {
                    "type": "uri",
                    "label": "報名",
                    "uri": "https://tw.taiwanviptravel.com/hualien-taitung/#tourlist"
                }]
            }
        });
    }
    /*----------------------------------------------------主選單------------------------------------------------------------*/
    //Other Demo
    else if (event.message.type === 'text' && message_lineTochat.trim() === 'Demo') {
      msgObj.message = '...';
      emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": "其他功能介紹",
                "text": "八方雲集/花旗銀行位置查詢\n嘿鬥餐廳菜單及訂位\n",
                "actions": [{
                    "type": "message",
                    "label": "查詢地點DEMO",
                    "text": '查詢地點DEMO'
                }, {
                    "type": "message",
                    "label": "餐廳訂位",
                    "text": "菜單功能"
                }, {
                    "type": "message",
                    "label": "衣服購物",
                    "text": "購物車功能"
                }]
            }
        });
    }
    //Tiniline主選單
    else if (event.message.type === 'text' && message_lineTochat.trim() === 'Tini小精靈') {
      msgObj.message = '已接收顯示Tini' + "問題分類" + "購買方案" + "公司資訊" + "菜單功能" + "購物車功能" + "問卷功能";
      emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "thumbnailImageUrl": 'https://7-t.imgbox.com/GEduM2tI.jpg',
                    "title": '請選擇以下服務。',
                    "text": '由Tini小精靈幫您快速排解問題!',
                    "actions": [{
                        "type": "message",
                        "label": '問題分類',
                        "text": "問題分類"
                    }, {
                        "type": "message",
                        "label": '購買方案',
                        "text": "購買方案"
                    }, {
                        "type": "message",
                        "label": '公司資訊',
                        "text": "公司資訊"
                    }]
                }, {
                    "thumbnailImageUrl": 'https://6-t.imgbox.com/4gj9qJm7.jpg',
                    "title": '功能示範DEMO系列',
                    "text": '菜單/購物車/問卷 功能',
                    "actions": [{
                        "type": "message",
                        "label": '菜單功能',
                        "text": "菜單功能"
                    }, {
                        "type": "message",
                        "label": '購物車功能',
                        "text": "購物車功能"
                    }, {
                        "type": "message",
                        "label": '問卷功能',
                        "text": "問卷功能"
                    }]
                }, {
                    "thumbnailImageUrl": 'https://s3-media4.fl.yelpcdn.com/bphoto/k4lpLYvXyUrscEowoiO9hg/o.jpg',
                    "title": '功能示範DEMO系列',
                    "text": '餐廳搜尋 功能',
                    "actions": [{
                        "type": "message",
                        "label": '查詢地點DEMO',
                        "text": "查詢地點DEMO"
                    }, {
                        "type": "message",
                        "label": '預約DEMO',
                        "text": "預約DEMO"
                    }, {
                        "type": "message",
                        "label": '回饋問卷',
                        "text": "回饋問卷"
                    }]
                }]
            }
        })
    }
    //圖片樣板模組 (圖片出不來)
    else if (event.message.type === 'text' && message_lineTochat.trim() === 'Imagemap') {
        // console.log("OKOK!")
        event.reply({
            type: 'imagemap',
            baseUrl: 'https://3-t.imgbox.com/xnGyM2RT.jpg/300',
            altText: 'this is an imagemap',
            baseSize: {
                height: 300,
                width: 300
            },
            actions: [{
                type: 'uri',
                linkUri: 'https://lancechieh.github.io/tw.html',
                area: {
                    x: 0,
                    y: 0,
                    width: 150,
                    height: 300
                }
            }, {
                type: 'message',
                text: 'hello',
                area: {
                    x: 150,
                    y: 0,
                    width: 150,
                    height: 300
                }
            }]
        });
    }
    //圖片樣板模組 (圖片出不來)
    /*---------------------------------------------董事長菜單------------------------------------------------------------*/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '董事長遊台灣菜單') {
      msgObj.message = '...';
      emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);

        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "thumbnailImageUrl": 'https://7-t.imgbox.com/zLJGgNrj.jpg',
                    "title": '董事長遊台灣',
                    "text": '常見問題/旅遊菜單/回饋問卷',
                    "actions": [{
                        "type": "message",
                        "label": '常見問題',
                        "text": "常見問題"
                    }, {
                        "type": "message",
                        "label": '旅遊菜單',
                        "text": "旅遊"
                    }, {
                        "type": "message",
                        "label": '回饋問卷',
                        "text": "回饋問卷"
                    }]
                }, {
                    "thumbnailImageUrl": 'https://8-t.imgbox.com/cEoYf9AJ.jpg',
                    "title": '董事長遊台灣',
                    "text": '旅遊預約/公司資訊',
                    "actions": [{
                        "type": "message",
                        "label": '旅遊預約',
                        "text": "旅遊預約"
                    }, {
                        "type": "message",
                        "label": '公司資訊',
                        "text": "公司資訊"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": " "
                    }]
                }]
            }
        })
    }

    //↓董事長遊台灣
    else if (event.message.type === 'text' && message_lineTochat.trim() === '回饋問卷') {
        event.reply({
            "type": "template",
            "altText": "行程相關問題/服務滿意度調查",
            "template": {
                "type": "confirm",
                "text": "麻煩您，撥冗填答案本問卷，提供您的寶貴意見，做為日後本公司旅遊整體規劃與服務改善的重要參考。",
                "actions": [{
                        "type": "message",
                        "label": "行程相關問題",
                        "text": "行程相關問題"
                    },
                    {
                        "type": "message",
                        "label": "滿意度",
                        "text": "滿意度"
                    }
                ]
            }
        })
    }
    //mysql 滿意度調查
    else if (event.message.type === 'text' && message_lineTochat.trim() === '滿意度') {
        voter = receiverId;
        time = d;
        categoryName = '秘書';
        workerName = '楊靜嫻';
        groupName = '台北TPE';
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S1-5"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "S1-4"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "S1-3"
                    }]
                }, {
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S1-2"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S1-1"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        });
        // }

    } else if (event.message.text.indexOf('S1-') !== -1) {
        console.log(event.message.text);
        if (event.message.text == "S1-1") {
            score = 1;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S1-2") {
            score = 2;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S1-3") {
            score = 3;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S1-4") {
            score = 4;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S1-5") {
            score = 5;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        }
        time = d;
        categoryName = '司機';
        workerName = '百俊';
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S3-5"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "S2-4"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "S2-3"
                    }]
                }, {
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S2-2"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S2-1"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('S2-') !== -1) {
        console.log(event.message.text);
        if (event.message.text == "S2-1") {
            score = 1;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S2-2") {
            score = 2;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S2-3") {
            score = 3;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S2-4") {
            score = 4;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S2-5") {
            score = 5;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        }
        time = d;
        categoryName = '攝影師';
        workerName = '劉育昇';
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S3-5"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "S3-4"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "S3-3"
                    }]
                }, {
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S3-2"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S3-1"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('S3-') !== -1) {
        console.log(event.message.text);
        if (event.message.text == "S3-1") {
            score = 1;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S3-2") {
            score = 2;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S3-3") {
            score = 3;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S3-4") {
            score = 4;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S2-5") {
            score = 5;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        }
        time = d;
        categoryName = '客服';
        workerName = '客服人員';
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S4-5"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "S4-4"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "S4-3"
                    }]
                }, {
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S4-2"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S4-1"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('S4-') !== -1) {
        console.log(event.message.text);
        if (event.message.text == "S4-1") {
            score = 1;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S4-2") {
            score = 2;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S4-3") {
            score = 3;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S4-4") {
            score = 4;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S4-5") {
            score = 5;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        }
        time = d;
        categoryName = '導遊';
        workerName = '魏清水';
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S5-5"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "S5-4"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "S5-3"
                    }]
                }, {
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S5-2"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S5-1"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('S5-') !== -1) {
        console.log(event.message.text);
        if (event.message.text == "S5-1") {
            score = 1;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S5-2") {
            score = 2;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S5-3") {
            score = 3;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S5-4") {
            score = 4;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S5-5") {
            score = 5;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        }
        time = d;
        categoryName = '導遊';
        workerName = '陳仕賢';
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S6-5"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "S6-4"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "S6-3"
                    }]
                }, {
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S6-2"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S6-1"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('S6-') !== -1) {
        console.log(event.message.text);
        if (event.message.text == "S6-1") {
            score = 1;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S6-2") {
            score = 2;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S6-3") {
            score = 3;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S6-4") {
            score = 4;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S6-5") {
            score = 5;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        }
        time = d;
        categoryName = '餐廳';
        workerName = '魔菇部落';
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S7-5"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "S7-4"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "S7-3"
                    }]
                }, {
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S7-2"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S7-1"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('S7-') !== -1) {
        console.log(event.message.text);
        if (event.message.text == "S7-1") {
            score = 1;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S7-2") {
            score = 2;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S7-3") {
            score = 3;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S7-4") {
            score = 4;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S7-5") {
            score = 5;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        }
        time = d;
        categoryName = '餐廳';
        workerName = '黑公雞風味餐廳';
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S8-5"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "S8-4"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "S8-3"
                    }]
                }, {
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S8-2"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S8-1"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('S8-') !== -1) {
        console.log(event.message.text);
        if (event.message.text == "S8-1") {
            score = 1;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S8-2") {
            score = 2;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S8-3") {
            score = 3;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S8-4") {
            score = 4;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S8-5") {
            score = 5;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        }
        time = d;
        categoryName = '餐廳';
        workerName = '宏銘的廚房';
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S9-5"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "S9-4"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "S9-3"
                    }]
                }, {
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S9-2"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S9-1"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('S9-') !== -1) {
        console.log(event.message.text);
        if (event.message.text == "S9-1") {
            score = 1;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S9-2") {
            score = 2;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S9-3") {
            score = 3;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S9-4") {
            score = 4;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S9-5") {
            score = 5;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        }
        time = d;
        categoryName = '餐廳';
        workerName = '喆娟夢田';
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S10-5"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "S10-4"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "S10-3"
                    }]
                }, {
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S10-2"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S10-1"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('S10-') !== -1) {
        console.log(event.message.text);
        if (event.message.text == "S10-1") {
            score = 1;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S10-2") {
            score = 2;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S10-3") {
            score = 3;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S10-4") {
            score = 4;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S10-5") {
            score = 5;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        }
        time = d;
        categoryName = '伴手禮';
        workerName = '卦山燒';
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S11-5"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "S11-4"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "S11-3"
                    }]
                }, {
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S11-2"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S11-1"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('S11-') !== -1) {
        console.log(event.message.text);
        if (event.message.text == "S11-1") {
            score = 1;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S11-2") {
            score = 2;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S11-3") {
            score = 3;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S11-4") {
            score = 4;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S11-5") {
            score = 5;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        }
        time = d;
        categoryName = '飯店';
        workerName = '彰化福泰飯店';
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S12-5"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "S12-4"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "S12-3"
                    }]
                }, {
                    "title": groupName,
                    "text": categoryName + ':' + workerName,
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S12-2"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S12-1"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('S12-') !== -1) {
        console.log(event.message.text);
        if (event.message.text == "S12-1") {
            score = 1;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S12-2") {
            score = 2;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S12-3") {
            score = 3;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S12-4") {
            score = 4;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        } else if (event.message.text == "S12-5") {
            score = 5;
            console.log(score);
            vote(voter, new Date(time), categoryName, workerName, groupName, score);
        }
        console.log(voter);
        console.log(time);
        console.log(categoryName);
        console.log(workerName);
        console.log(groupName);
        event.reply({
            type: 'text',
            text: '感謝您的回饋！'
        })
    }
    //mysql 滿意度調查
    //firebase DB行程相關問題
    else if (event.message.type === 'text' && message_lineTochat.trim() === '行程相關問題') {
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '你如何得知此次旅遊行程',
                    "text": '--------------------------------------------------',
                    "actions": [{
                        "type": "message",
                        "label": '網站',
                        "text": "P1-網站"
                    }, {
                        "type": "message",
                        "label": 'FB',
                        "text": "P1-FB"
                    }, {
                        "type": "message",
                        "label": '親友介紹',
                        "text": "P1-親友介紹"
                    }]
                }, {
                    "title": '你如何得知此次旅遊行程',
                    "text": '--------------------------------------------------',
                    "actions": [{
                        "type": "message",
                        "label": '從雙月刊',
                        "text": "P1-從雙月刊"
                    }, {
                        "type": "message",
                        "label": '員旅',
                        "text": "P1-員旅"
                    }, {
                        "type": "message",
                        "label": '其他',
                        "text": "P1-其他"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('P1-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "從哪個管道得知": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '您第幾次參加本公司行程',
                    "text": '--------------------------------------------------',
                    "actions": [{
                        "type": "message",
                        "label": '第一次',
                        "text": "P2-第一次"
                    }, {
                        "type": "message",
                        "label": '第二次',
                        "text": "P2-第二次"
                    }, {
                        "type": "message",
                        "label": '第三次',
                        "text": "P2-第三次"
                    }]
                }, {
                    "title": '您第幾次參加本公司行程',
                    "text": '--------------------------------------------------',
                    "actions": [{
                        "type": "message",
                        "label": '第四次',
                        "text": "P2-第四次"
                    }, {
                        "type": "message",
                        "label": '五次以上',
                        "text": "P2-五次以上"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('P2-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "參加本公司的次數": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '您再次參加本公司行程原因',
                    "text": '--------------------------------------------------',
                    "actions": [{
                        "type": "message",
                        "label": '服務品質好',
                        "text": "P3-服務品質好"
                    }, {
                        "type": "message",
                        "label": '行程地點優',
                        "text": "P3-行程地點優"
                    }, {
                        "type": "message",
                        "label": '其他',
                        "text": "P3-其他"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('P3-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "參加本公司旅遊的原因": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '您此次旅遊行程幾人同行',
                    "text": '--------------------------------------------------',
                    "actions": [{
                        "type": "message",
                        "label": '1人',
                        "text": "P4-1人"
                    }, {
                        "type": "message",
                        "label": '2人',
                        "text": "P4-2人"
                    }, {
                        "type": "message",
                        "label": '3人',
                        "text": "P4-3人"
                    }]
                }, {
                    "title": '您此次旅遊行程幾人同行',
                    "text": '--------------------------------------------------',
                    "actions": [{
                        "type": "message",
                        "label": '4人',
                        "text": "P4-4人"
                    }, {
                        "type": "message",
                        "label": '5人以上',
                        "text": "P4-5人以上"
                    }, {
                        "type": "message",
                        "label": '-',
                        "text": "-"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('P4-') !== -1) {
        console.log(receiverId);
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "此次旅遊幾人同行": ANS
                });
                break;
            }
        }
    }
    //firebase DB行程相關問題
    //↓此段現在沒有用處，(本來是用來寫進firebase DB)，之後為了改寫到mysql，所以可以不理會此段。
    else if (event.message.type === 'text' && message_lineTochat.trim() === '服務滿意度調查' || event.message.text.indexOf('Z4-') !== -1) {
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '服務滿意度調查',
                    "text": '秘書:楊靜嫻',
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "Q1-非常滿意"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "Q1-滿意"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "Q1-普通"
                    }]
                }, {
                    "title": '服務滿意度調查',
                    "text": '秘書:楊靜嫻',
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "Q1-不滿意"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "非常不滿意-Q1"
                    }, {
                        "type": "message",
                        "label": '查看其他問題',
                        "text": "Tini小精靈"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('Q1-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "秘書:楊靜嫻": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '服務滿意度調查',
                    "text": '司機:百駿',
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "Q2-非常滿意"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "Q2-滿意"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "Q2-普通"
                    }]
                }, {
                    "title": '服務滿意度調查',
                    "text": '司機:百駿',
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "Q2-不滿意"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "Q2-非常不滿意"
                    }, {
                        "type": "message",
                        "label": '查看其他問題',
                        "text": "Tini小精靈"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('Q2-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "司機:百駿": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '服務滿意度調查',
                    "text": '攝影師：劉育昇',
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "Q3-非常滿意"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "Q3-滿意"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "Q3-普通"
                    }]
                }, {
                    "title": '服務滿意度調查',
                    "text": '攝影師：劉育昇',
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "Q3-不滿意"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "Q3-非常不滿意"
                    }, {
                        "type": "message",
                        "label": '查看其他問題',
                        "text": "Tini小精靈"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('Q3-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "攝影師：劉育昇": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '服務滿意度調查',
                    "text": '客服人員',
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "Q4-非常滿意"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "Q4-滿意"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "Q4-普通"
                    }]
                }, {
                    "title": '服務滿意度調查',
                    "text": '客服人員',
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "Q4-不滿意"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "Q4-非常不滿意"
                    }, {
                        "type": "message",
                        "label": '查看其他問題',
                        "text": "Tini小精靈"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('Q4-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "客服人員": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '服務滿意度調查',
                    "text": '導覽老師：魏清水',
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "Q5-非常滿意"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "Q5-滿意"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "Q5-普通"
                    }]
                }, {
                    "title": '服務滿意度調查',
                    "text": '導覽老師：魏清水',
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "Q5-不滿意"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "Q5-非常不滿意"
                    }, {
                        "type": "message",
                        "label": '查看其他問題',
                        "text": "Tini小精靈"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('Q5-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "導覽老師：魏清水": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '服務滿意度調查',
                    "text": '導覽老師：陳仕賢',
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "Q6-非常滿意"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "Q6-滿意"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "Q6-普通"
                    }]
                }, {
                    "title": '服務滿意度調查',
                    "text": '導覽老師：陳仕賢',
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "Q6-不滿意"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "Q6-非常不滿意"
                    }, {
                        "type": "message",
                        "label": '查看其他問題',
                        "text": "Tini小精靈"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('Q6-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "導覽老師：陳仕賢": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '服務滿意度調查',
                    "text": '餐廳：蘑菇部落',
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "Q7-非常滿意"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "Q7-滿意"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "Q7-普通"
                    }]
                }, {
                    "title": '服務滿意度調查',
                    "text": '餐廳：蘑菇部落',
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "Q7-不滿意"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "Q7-非常不滿意"
                    }, {
                        "type": "message",
                        "label": '查看其他問題',
                        "text": "Tini小精靈"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('Q7-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "餐廳：蘑菇部落": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '服務滿意度調查',
                    "text": '餐廳：黑公雞風味餐廳',
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "Q8-非常滿意"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "Q8-滿意"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "Q8-普通"
                    }]
                }, {
                    "title": '服務滿意度調查',
                    "text": '餐廳：黑公雞風味餐廳',
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "Q8-不滿意"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "Q8-非常不滿意"
                    }, {
                        "type": "message",
                        "label": '查看其他問題',
                        "text": "Tini小精靈"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('Q8-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "餐廳：黑公雞風味餐廳": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '服務滿意度調查',
                    "text": '餐廳：宏銘的廚房',
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "Q9-非常滿意"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "Q9-滿意"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "Q9-普通"
                    }]
                }, {
                    "title": '服務滿意度調查',
                    "text": '餐廳：宏銘的廚房',
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "Q9-不滿意"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "Q9-非常不滿意"
                    }, {
                        "type": "message",
                        "label": '查看其他問題',
                        "text": "Tini小精靈"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('Q9-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "餐廳：宏銘的廚房": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '服務滿意度調查',
                    "text": '餐廳：喆娟夢田',
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "Q10-非常滿意"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "Q10-滿意"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "Q10-普通"
                    }]
                }, {
                    "title": '服務滿意度調查',
                    "text": '餐廳：喆娟夢田',
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "Q10-不滿意"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "Q10-非常不滿意"
                    }, {
                        "type": "message",
                        "label": '查看其他問題',
                        "text": "Tini小精靈"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('Q10-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "餐廳：喆娟夢田": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '服務滿意度調查',
                    "text": '伴手禮',
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "Q11-非常滿意"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "Q11-滿意"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "Q11-普通"
                    }]
                }, {
                    "title": '服務滿意度調查',
                    "text": '伴手禮',
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "Q11-不滿意"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "Q11-非常不滿意"
                    }, {
                        "type": "message",
                        "label": '查看其他問題',
                        "text": "Tini小精靈"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('Q11-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "伴手禮": ANS
                });
                break;
            }
        }
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '服務滿意度調查',
                    "text": '住宿：彰化福泰飯店',
                    "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "Q12-非常滿意"
                    }, {
                        "type": "message",
                        "label": '滿意',
                        "text": "Q12-滿意"
                    }, {
                        "type": "message",
                        "label": '普通',
                        "text": "Q12-普通"
                    }]
                }, {
                    "title": '服務滿意度調查',
                    "text": '住宿：彰化福泰飯店',
                    "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "Q12-不滿意"
                    }, {
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "Q12-非常不滿意"
                    }, {
                        "type": "message",
                        "label": '查看其他問題',
                        "text": "Tini小精靈"
                    }]
                }]
            }
        })
    } else if (event.message.text.indexOf('Q12-') !== -1) {
        var ANS = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId) {
                newDBRef.child(i).child("Profile").update({
                    "住宿：彰化福泰飯店": ANS
                });
                break;
            }
            event.reply({
                "type": "template",
                "altText": "this is a buttons template",
                "template": {
                    "type": "buttons",
                    "title": "請客戶輸入感想及建議",
                    "text": " ",
                    "actions": [{
                        "type": "message",
                        "label": "填寫",
                        "text": "填寫"
                    }]
                }
            });
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '填寫') {

        msgObj.message = message_lineTochat;
        console.log(msgObj);
        console.log('apiai');
        var app = apiai('ecbb41a02267478ebadbda7e7ee3b4b2');
        var request = app.textRequest(msgObj.message, {
            sessionId: 'dafb019e-753f-4f6e-ab71-bd13d5d6910e'
        });
        request.on('response', function(response) {
            let action = response.result.action;
            let speech = response.result.fulfillment.messages[0].speech;
            let parameter = response.result.parameters;
            let complete = !response.result.actionIncomplete;
            console.log('apiai-2');
            console.log(response.result);
        });
        request.on('error', function(error) {
            console.log(error);
        });
        request.end();
        let = ('假日不得預約');
        event.reply({
            type: 'text',
            text: SSday
        });

        console.log('done');
    }
    //↑此段現在沒有用處
    //↑董事長遊台灣

    //↓預約功能
    else if (event.message.type === 'text' && message_lineTochat.trim() === '預約DEMO') {
      msgObj.message = '已接收顯示預約日期';
      emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '預約日期',
                    "text": MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7] + '~' + MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7],
                    "actions": [{
                        "type": "message",
                        "label": YY + " 年 " + MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7],
                        "text": YY + " 年 " + MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7]
                    }, {
                        "type": "message",
                        "label": YY + " 年 " + MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7],
                        "text": YY + " 年 " + MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7]
                    }, {
                        "type": "message",
                        "label": YY + " 年 " + MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7],
                        "text": YY + " 年 " + MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7]
                    }]
                }, {
                    "title": '預約日期',
                    "text": MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7] + '~' + MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7],
                    "actions": [{
                        "type": "message",
                        "label": YY + " 年 " + MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7],
                        "text": YY + " 年 " + MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7]
                    }, {
                        "type": "message",
                        "label": YY + " 年 " + MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7],
                        "text": YY + " 年 " + MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7]
                    }, {
                        "type": "message",
                        "label": YY + " 年 " + MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7],
                        "text": YY + " 年 " + MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7]
                    }]
                }, {
                    "title": '預約日期',
                    "text": MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7] + '~' + MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7],
                    "actions": [{
                        "type": "message",
                        "label": YY + " 年 " + MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7],
                        "text": YY + " 年 " + MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7]
                    }, {
                        "type": "message",
                        "label": YY + " 年 " + MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7],
                        "text": YY + " 年 " + MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7]
                    }, {
                        "type": "message",
                        "label": YY + " 年 " + MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7],
                        "text": YY + " 年 " + MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7]
                    }]
                }]
            }
        })
    }

    /*----------------------------------------------------預約分類------------------------------------------------------------*/
    //DD+1
    else if (event.message.type === 'text' && message_lineTochat.trim() === YY + " 年 " + MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7]) {
      msgObj.message = '已接收顯示' + YY + " 年 " + MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7];
      emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        if ((day + 1) % 7 != 0 && (day + 1) % 7 != 6) {
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                    type: 'carousel',
                    "columns": [{
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7],
                        "text": "上午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '10:00-11:00',
                            "text": MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7] + "10:00-11:00"
                        }, {
                            "type": "message",
                            "label": '11:00-12:00',
                            "text": MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7] + "11:00-12:00"
                        }]
                    }, {
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7],
                        "text": "下午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '15:00-16:00',
                            "text": MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7] + "15:00-16:00"
                        }, {
                            "type": "message",
                            "label": '16:00-17:00',
                            "text": MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7] + "16:00-17:00"
                        }]
                    }]
                }
            });
        } else {
            let SSday = ('假日不得預約');
            event.reply({
                type: 'text',
                text: SSday
            });
        }
    }
    /**/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '旅遊預約') {
      msgObj.message = '已接收顯示預約日期';
      emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        io.sockets.emit('new message', {
            msg: '已接收顯示預約日期',
            name: receiverId,
        });
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '斯洛維尼',
                    "text": "10/16團-$168,888/位\n11/27團-$156,888/位\n2018/1/29團-$156,888/位",
                    "actions": [{
                        "type": "message",
                        "label": "斯洛維尼亞10/16~10/25",
                        "text": "斯洛維尼亞10/16~10/25"
                    }, {
                        "type": "message",
                        "label": "斯洛維尼亞11/27~12/06",
                        "text": "斯洛維尼亞11/27~12/06"
                    }, {
                        "type": "message",
                        "label": "斯洛維尼亞2018/1/29~2/07",
                        "text": "斯洛維尼亞2018/1/29~2/07"
                    }]
                }, {
                    "title": '杜拜',
                    "text": "11/10團-$194,888/位\n12/15團-$194,888/位\n",
                    "actions": [{
                        "type": "message",
                        "label": "杜拜11/10~11/17",
                        "text": "杜拜11/10~11/17"
                    }, {
                        "type": "message",
                        "label": "杜拜12/15~12/22",
                        "text": "杜拜12/15~12/22"
                    }, {
                        "type": "message",
                        "label": "-",
                        "text": " "
                    }]
                }, {
                    "title": '約旦、以色列',
                    "text": "12/3團-$199,888/位\n\n",
                    "actions": [{
                        "type": "message",
                        "label": "約旦.以色列12/3~12/15",
                        "text": "約旦.以色列12/3~12/15"
                    }, {
                        "type": "message",
                        "label": "-",
                        "text": " "
                    }, {
                        "type": "message",
                        "label": "-",
                        "text": " "
                    }]
                }]
            }
        })
    } else if (event.message.type === 'text' && message_lineTochat.trim() === "斯洛維尼亞10/16~10/25") {
        var Rdate = event.message.text;
        console.log(count);
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === "斯洛維尼亞11/27~12/06") {
        var Rdate = event.message.text;
        console.log(count);
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === "斯洛維尼亞2018/1/29~2/07") {
        var Rdate = event.message.text;
        console.log(count);
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === "杜拜11/10~11/17") {
        var Rdate = event.message.text;
        console.log(count);
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === "杜拜12/15~12/22") {
        var Rdate = event.message.text;
        console.log(count);
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === "約旦.以色列12/3~12/15") {
        var Rdate = event.message.text;
        console.log(count);
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    }
    /**/
    else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7] + "10:00-11:00") {
        var Rdate = event.message.text;
        console.log(count);
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7] + "11:00-12:00") {
        var Rdate = event.message.text;
        console.log(count);
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7] + "15:00-16:00") {
        var Rdate = event.message.text;
        console.log(count);
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 1) + '日' + day_list[(day + 1) % 7] + "16:00-17:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    }
    //DD+2
    else if (event.message.type === 'text' && message_lineTochat.trim() === YY + " 年 " + MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7]) {
      msgObj.message = '已接收顯示' + YY + " 年 " + MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7];
      emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        if ((day + 2) % 7 != 0 && (day + 2) % 7 != 6) {
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                    type: 'carousel',
                    "columns": [{
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7],
                        "text": "上午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '10:00-11:00',
                            "text": MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7] + "10:00-11:00"
                        }, {
                            "type": "message",
                            "label": '11:00-12:00',
                            "text": MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7] + "11:00-12:00"
                        }]
                    }, {
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7],
                        "text": "下午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '15:00-16:00',
                            "text": MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7] + "15:00-16:00"
                        }, {
                            "type": "message",
                            "label": '16:00-17:00',
                            "text": MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7] + "16:00-17:00"
                        }]
                    }]
                }
            });
        } else {
            let SSday = ('假日不得預約');
            event.reply({
                type: 'text',
                text: SSday
            });
        }

    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7] + "10:00-11:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7] + "11:00-12:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7] + "15:00-16:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 2) + '日' + day_list[(day + 2) % 7] + "16:00-17:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    }
    //DD+3
    else if (event.message.type === 'text' && message_lineTochat.trim() === YY + " 年 " + MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7]) {
      msgObj.message = '已接收顯示' + YY + " 年 " + MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7];
      emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        if ((day + 3) % 7 != 0 && (day + 3) % 7 != 6) {
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                    type: 'carousel',
                    "columns": [{
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7],
                        "text": "上午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '10:00-11:00',
                            "text": MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7] + "10:00-11:00"
                        }, {
                            "type": "message",
                            "label": '11:00-12:00',
                            "text": MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7] + "11:00-12:00"
                        }]
                    }, {
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7],
                        "text": "下午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '15:00-16:00',
                            "text": MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7] + "15:00-16:00"
                        }, {
                            "type": "message",
                            "label": '16:00-17:00',
                            "text": MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7] + "16:00-17:00"
                        }]
                    }]
                }
            });
        } else {
            let SSday = ('假日不得預約');
            event.reply({
                type: 'text',
                text: SSday
            });
        }

    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7] + "10:00-11:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7] + "11:00-12:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7] + "15:00-16:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 3) + '日' + day_list[(day + 3) % 7] + "16:00-17:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    }
    //DD+4
    else if (event.message.type === 'text' && message_lineTochat.trim() === YY + " 年 " + MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7]) {
        msgObj.message = '已接收顯示' + YY + " 年 " + MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7];
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        if ((day + 4) % 7 != 0 && (day + 4) % 7 != 6) {
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                    type: 'carousel',
                    "columns": [{
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7],
                        "text": "上午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '10:00-11:00',
                            "text": MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7] + "10:00-11:00"
                        }, {
                            "type": "message",
                            "label": '11:00-12:00',
                            "text": MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7] + "11:00-12:00"
                        }]
                    }, {
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7],
                        "text": "下午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '15:00-16:00',
                            "text": MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7] + "15:00-16:00"
                        }, {
                            "type": "message",
                            "label": '16:00-17:00',
                            "text": MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7] + "16:00-17:00"
                        }]
                    }]
                }
            });
        } else {
            let SSday = ('假日不得預約');
            event.reply({
                type: 'text',
                text: SSday
            });
        }

    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7] + "10:00-11:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7] + "11:00-12:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7] + "15:00-16:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 4) + '日' + day_list[(day + 4) % 7] + "16:00-17:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    }
    //DD+5
    else if (event.message.type === 'text' && message_lineTochat.trim() === YY + " 年 " + MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7]) {
        msgObj.message = '已接收顯示' + YY + " 年 " + MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7];
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        if ((day + 5) % 7 != 0 && (day + 5) % 7 != 6) {
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                    type: 'carousel',
                    "columns": [{
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7],
                        "text": "上午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '10:00-11:00',
                            "text": MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7] + "10:00-11:00"
                        }, {
                            "type": "message",
                            "label": '11:00-12:00',
                            "text": MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7] + "11:00-12:00"
                        }]
                    }, {
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7],
                        "text": "下午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '15:00-16:00',
                            "text": MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7] + "15:00-16:00"
                        }, {
                            "type": "message",
                            "label": '16:00-17:00',
                            "text": MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7] + "16:00-17:00"
                        }]
                    }]
                }
            });
        } else {
            let Holiday = ('假日不得預約');
            event.reply({
                type: 'text',
                text: Holiday
            });

        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7] + "10:00-11:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7] + "11:00-12:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7] + "15:00-16:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 5) + '日' + day_list[(day + 5) % 7] + "16:00-17:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    }
    //DD+6
    else if (event.message.type === 'text' && message_lineTochat.trim() === YY + " 年 " + MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7]) {
        msgObj.message = '已接收顯示' + YY + " 年 " + MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7];
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        if ((day + 6) % 7 != 0 && (day + 6) % 7 != 6) {
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                    type: 'carousel',
                    "columns": [{
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7],
                        "text": "上午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '10:00-11:00',
                            "text": MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7] + "10:00-11:00"
                        }, {
                            "type": "message",
                            "label": '11:00-12:00',
                            "text": MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7] + "11:00-12:00"
                        }]
                    }, {
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7],
                        "text": "下午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '15:00-16:00',
                            "text": MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7] + "15:00-16:00"
                        }, {
                            "type": "message",
                            "label": '16:00-17:00',
                            "text": MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7] + "16:00-17:00"
                        }]
                    }]
                }
            });
        } else {
            let SSday = ('假日不得預約');
            event.reply({
                type: 'text',
                text: SSday
            });
        }

    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7] + "10:00-11:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7] + "11:00-12:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7] + "15:00-16:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 6) + '日' + day_list[(day + 6) % 7] + "16:00-17:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    }
    //DD+7
    else if (event.message.type === 'text' && message_lineTochat.trim() === YY + " 年 " + MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7]) {
        msgObj.message = '已接收顯示' + YY + " 年 " + MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7];
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        if ((day + 7) % 7 != 0 && (day + 7) % 7 != 6) {
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                    type: 'carousel',
                    "columns": [{
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7],
                        "text": "上午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '10:00-11:00',
                            "text": MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7] + "10:00-11:00"
                        }, {
                            "type": "message",
                            "label": '11:00-12:00',
                            "text": MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7] + "11:00-12:00"
                        }]
                    }, {
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7],
                        "text": "下午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '15:00-16:00',
                            "text": MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7] + "15:00-16:00"
                        }, {
                            "type": "message",
                            "label": '16:00-17:00',
                            "text": MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7] + "16:00-17:00"
                        }]
                    }]
                }
            });
        } else {
            let SSday = ('假日不得預約');
            event.reply({
                type: 'text',
                text: SSday
            });
        }

    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7] + "10:00-11:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7] + "11:00-12:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7] + "15:00-16:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 7) + '日' + day_list[(day + 7) % 7] + "16:00-17:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    }
    //DD+8
    else if (event.message.type === 'text' && message_lineTochat.trim() === YY + " 年 " + MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7]) {
        msgObj.message = '已接收顯示' + YY + " 年 " + MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7];
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        if ((day + 8) % 7 != 0 && (day + 8) % 7 != 6) {
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                    type: 'carousel',
                    "columns": [{
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7],
                        "text": "上午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '10:00-11:00',
                            "text": MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7] + "10:00-11:00"
                        }, {
                            "type": "message",
                            "label": '11:00-12:00',
                            "text": MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7] + "11:00-12:00"
                        }]
                    }, {
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7],
                        "text": "下午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '15:00-16:00',
                            "text": MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7] + "15:00-16:00"
                        }, {
                            "type": "message",
                            "label": '16:00-17:00',
                            "text": MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7] + "16:00-17:00"
                        }]
                    }]
                }
            });
        } else {
            let SSday = ('假日不得預約');
            event.reply({
                type: 'text',
                text: SSday
            });
        }

    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7] + "10:00-11:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7] + "11:00-12:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7] + "15:00-16:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 8) + '日' + day_list[(day + 8) % 7] + "16:00-17:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    }
    //DD+9
    else if (event.message.type === 'text' && message_lineTochat.trim() === YY + " 年 " + MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7]) {
        msgObj.message = '已接收顯示' + YY + " 年 " + MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7];
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        if ((day + 9) % 7 != 0 && (day + 9) % 7 != 6) {
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                    type: 'carousel',
                    "columns": [{
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7],
                        "text": "上午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '10:00-11:00',
                            "text": MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7] + "10:00-11:00"
                        }, {
                            "type": "message",
                            "label": '11:00-12:00',
                            "text": MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7] + "11:00-12:00"
                        }]
                    }, {
                        "title": "面試日期 " + YY + " 年 " + MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7],
                        "text": "下午時段\n注意:預約日期，假日一概不受理。",
                        "actions": [{
                            "type": "message",
                            "label": '15:00-16:00',
                            "text": MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7] + "15:00-16:00"
                        }, {
                            "type": "message",
                            "label": '16:00-17:00',
                            "text": MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7] + "16:00-17:00"
                        }]
                    }]
                }
            });
        } else {
            let SSday = ('假日不得預約');
            event.reply({
                type: 'text',
                text: SSday
            });
        }

    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7] + "10:00-11:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7] + "11:00-12:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7] + "15:00-16:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    } else if (event.message.type === 'text' && message_lineTochat.trim() === MM + '月' + (DD + 9) + '日' + day_list[(day + 9) % 7] + "16:00-17:00") {
        var Rdate = event.message.text;
        for (let i in chatData) {
            if (chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate) {
                let reservation_YES = ('此時段預約過');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                return;
            }
        }
        for (let i in chatData) {
            if (chatData[i].Profile.Reservation == Rdate) count++;
        }
        if (count < 2) {
            for (let i in chatData) {
                if (chatData[i].Profile.userId == receiverId) {
                    newDBRef.child(i).child("Profile").update({
                        "Reservation": Rdate
                    });
                    let reservation_YES = ('預約成功');
                    event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count = 0;
                    break;
                }
            }
        } else {
            for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                    type: 'text',
                    text: reservation_YES
                });
                count = 0;
            }
        }
    }
    //↑預約功能
    /*----------------------------------------------------問題分類------------------------------------------------------------*/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '常見問題') {
        msgObj.message = '...';
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "this is a buttons template",
            "template": {
                "type": "buttons",
                "title": "常見問題",
                "text": "參考Line 回應客人的事項\n海外部分,請參閱海外教案",
                "actions": [{
                    "type": "message",
                    "label": "基本問題",
                    "text": '基本問題'
                }, {
                    "type": "message",
                    "label": "特殊問題",
                    "text": "特殊問題"
                }]
            }
        });
    }
    /*----------------------------------------------------問題分類(A)------------------------------------------------------------*/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '基本問題') {
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '基本問題',
                    "text": 'A1~A3',
                    "actions": [{
                        "type": "message",
                        "label": '報名海外或客製化行程',
                        "text": "A1"
                    }, {
                        "type": "message",
                        "label": '海外v.s全包式',
                        "text": "A2"
                    }, {
                        "type": "message",
                        "label": '覺得價格不平易近人',
                        "text": "A3"
                    }]
                }, {
                    "title": '基本問題',
                    "text": 'A4~A6',
                    "actions": [{
                        "type": "message",
                        "label": '客人要求推薦行程',
                        "text": "A4"
                    }, {
                        "type": "message",
                        "label": '長者參加',
                        "text": "A5"
                    }, {
                        "type": "message",
                        "label": '單人報名',
                        "text": "A6"
                    }]
                }, {
                    "title": '基本問題',
                    "text": 'A7~A9',
                    "actions": [{
                        "type": "message",
                        "label": '怎麼都只有台北出發',
                        "text": "A7"
                    }, {
                        "type": "message",
                        "label": '遇到沒規劃的行程',
                        "text": "A8"
                    }, {
                        "type": "message",
                        "label": '客製化時間時應注意',
                        "text": "A9"
                    }]
                }, {
                    "title": '基本問題',
                    "text": 'A10~A12',
                    "actions": [{
                        "type": "message",
                        "label": '前台顯示已滿團或最後機會',
                        "text": "A10"
                    }, {
                        "type": "message",
                        "label": '詢問候補狀況',
                        "text": "A11"
                    }, {
                        "type": "message",
                        "label": '報名流程款項',
                        "text": "A12"
                    }]
                }, {
                    "title": '基本問題',
                    "text": 'A13、A14、下一頁',
                    "actions": [{
                        "type": "message",
                        "label": '行程有無成團',
                        "text": "A13"
                    }, {
                        "type": "message",
                        "label": '匯款訊息',
                        "text": "A14"
                    }, {
                        "type": "message",
                        "label": '下一頁',
                        "text": "基本問題-2"
                    }]
                }]
            }
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '基本問題-2') {
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '基本問題-第二頁',
                    "text": 'A15~A17',
                    "actions": [{
                        "type": "message",
                        "label": '貴賓欲報名',
                        "text": "A15"
                    }, {
                        "type": "message",
                        "label": '報名完成後',
                        "text": "A16"
                    }, {
                        "type": "message",
                        "label": '嬰、幼兒童行程費用',
                        "text": "A17"
                    }]
                }, {
                    "title": '基本問題-第二頁',
                    "text": 'A18~A20',
                    "actions": [{
                        "type": "message",
                        "label": '訂金繳交',
                        "text": "A18"
                    }, {
                        "type": "message",
                        "label": '繳完訂金',
                        "text": "A19"
                    }, {
                        "type": "message",
                        "label": '單人房差費用',
                        "text": "A20"
                    }]
                }]
            }
        });
    } else if (event.message.type === 'text' && (message_lineTochat.trim() === 'A1' || message_lineTochat.trim() === '報名海外或客製化行程')) {
        let A1 = 'A1:報名海外或客製化行程\n-貼罐頭訊息請上班日專員回覆\n親愛的貴賓您好，請提供您您的姓名、聯絡電話、 EMAIL。\n之後將由海外外專員-千蔚(分機 31)/客製化化專員-雅慈和您聯絡並完成後續報名作業。';
        msgObj.message = A1;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A1
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A2') {
        let A2 = 'A2:\n海外v.s全包式\n\n團體旅遊：參加我們的旅遊團，有台灣的領隊、攝影師、當地華語導遊，三位工作人員全程替貴賓們服務~\n\n全包式旅遊：出發日貴賓自行訂定，4-6人即可成行(2人也可費用較高)，彈性方便，是貴賓專屬的私人團!\n從台灣出發，無領隊及攝影師，當地優質華語導遊及司機帶您走透透~\n\n(未含WIFI分享器)';
        msgObj.message = A2;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A2
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A3') {
        let A3 = 'A2:覺得價格不平易近人時\n-選擇一個適當的選項給予回覆\n\n(1)我們都是走比較知性及深度的旅遊，全程無自費及購物。\n對於行程內容及住宿用餐皆精心安排及規劃，各景點都會安排專業的導覽老師來服務，也會有隨團秘書服務每位貴賓，所以費用的部份會比稍微高一些喔！\n旅遊品質也是經過許多參與的貴賓所認證的，也歡迎貴賓您來體驗看看呢吃得好，玩得特別，住的舒適！\n都是董事長精心挑選希望能提供給貴賓們一個特別的旅程~\n\n(2)因為您一直辛苦的工作，是該對自己好一點了！\n參加品質好，吃得好，住得好的行程來犒賞自己。\n我們也有合作的銀行提供六期”零利率”的方案來為您分期繳交費用呢～\n請您再次考慮，對自己好、投資自己、愛自己多一點，這樣也會更有自信後，您的收入自然就會源源不絕地到您的面前了，屆時您就一點都不覺得高價位咯呢！\n\n(3)是的，我們知道團費價格較高，所以我們會拿出相對的行程及服務。\n在各景點我們會請專業的導覽老師，仔細為大家介紹跟解說，讓您不會白白走一遭而一無所獲。\n我們除了讓您吃得好，住的好，更讓您把知識帶回家。\n許多貴賓都是一試成主顧呢～～\n另外我們沒有自費行程或是購物行程，也都不用再給任何小費了．\n請您給我們一次機會，讓曾經是空姐的隨團秘書，以及跟著董事長遊台灣的全體，為您一起留下特別印象深刻的旅遊回憶吧！\n另外我們團費可以分三期或六期零利率喔～\n';
        msgObj.message = A3;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A3
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A4') {
        let A4 = 'A4:客人要求推薦行程\n可以先詢問目前急需報名的行程，並提供給客人。\n若不喜歡，在提供自己的看法(是可以的)，但通常需要了解公司行程的內容後，才能確實地依照客人的需求介紹行程。\n例如：老人家年紀大～了解需求後再去推薦，不懂行程可以看官網自己去比較看看，絕對不要亂推。 ';
        msgObj.message = A4;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A4
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A5') {
        let A5 = 'A5:長者參加\n推薦較輕鬆一點的行程，例如台南、淡水或彰化等等的慢活優閒的行程。';
        msgObj.message = A5;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A5
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A6') {
        let A6 = 'A6:單人報名\n太魯閣、苗栗勻淨湖行程不推薦報名\n\n可為客人與同性別旅客配房，或是可以跟秘書or攝影師配房。';
        msgObj.message = A6;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A6
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A7') {
        let A7 = 'A7:怎麼都只有台北出發\n很多中南部客人常常會提到的問題，我們也是有可以在其他地方可以集合的喔，可推薦給中南部出發的貴賓介紹的行程唷(其實您在中南部自行前往各集合地點，有時也會更省時也更省錢呢！\n請您就選一個您喜歡的行程，讓我們來為您找尋方法，提供您最適合您的做法來為您服務。\n讓您開心順利出遊，一直是我們所追求的。\n因為您看到您開心的表情，對我們來說都值得了呢)';
        msgObj.message = A7;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A7
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A8') {
        let A8 = 'A8:遇到我們沒規劃劃的行程時\n您好，目前我們還在規劃中中呢，還是提供給您參考這個行程看看呢~\n(貼貼類似行程網址)並登表到”特殊需求區”。';
        msgObj.message = A8;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A8
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A9') {
        let A9 = 'A9:給貴賓押客製化時間時應注意\n需要3-4周作業期間，若貴賓賓於line上提出出發日低於此作業期間。\n請引導他他們將出發日往後延至諮詢日一個月左右。';
        msgObj.message = A9;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A9
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A10') {
        let A10 = 'A10:前台顯示已滿團或最後機會\n(請來電洽詢)\n基本上剩1.2個名額，先詢詢問貴賓有幾人要報名，詢問專員該團剩幾個名額，若能符合需求先替貴賓報名卡位~';
        msgObj.message = A10;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A10
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A11') {
        let A11 = 'A11:貴賓詢問候補狀況\n目前無法與您確定呢，要待名額釋出才會候補成功唷，還請您耐心等候呢，若候補成功會請專員於第一時間與您聯繫～～';
        msgObj.message = A11;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A11
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A12') {
        let A12 = 'A12:報名流程款項\n\n1.《保留名額》無論於官網、現場、電話、LINE上報名，報名狀態皆為《保留名額》。\n\n2.【訂金繳款通知】《保留名額》後 3~5個工作天內會以EMAIL寄出【訂金繳款通知】，內有報名所需所有資訊、文件及費用明細。\n\n3.《報名成功》請於【訂金繳款通知】指定日期內完成訂金之支付，並回傳護照影本，台胞證（僅福州馬祖）、定型化契約、報名表格才算《報名成功》唷~\n\n4.【成團通知】待達成各團設定之最低報名人數便立即以簡訊發出，最慢將於出發日兩周前通知您所報名之團是否成團。\n如未成團便替貴賓執行轉團或退費之作業 ~\n《轉團》已繳付之訂金可轉至我司國內國外任何日期、地點之行程使用。\n《退費》若因此團並未達到最低報名人數，已繳付之訂金可全額退費，匯款之貴賓請提供銀行帳戶退匯，刷卡則進行刷退作業。\n\n5.【尾款繳款通知】我們最慢將於出發日前兩周左右確定是否成團，確定成團後，以 EMAIL寄出【尾款繳款通知】，請於指定日期內完成尾款之支付，並可準備出發囉~';
        msgObj.message = A12;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A12
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A13') {
        let A13 = 'A13:問有無成團\n通常周五會將報名資訊PO再LINE群組裡，若時間較後面的團或是無法確定是否成團請回應。\n因時間較後面目前無法與您確認呢，我們正在努力中讓他成團唷~\n請您務必對我們有信心....等。';
        msgObj.message = A13;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A13
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A14') {
        let A14 = 'A14:收到匯款訊息時\n務必確認匯款帳號末五碼，金額，全名和參團行程（含日期）\n出發前 3-5天會有最準確的行前通知跟當團秘書電話等資料！\n出發前一天會由秘書親自致電給您做聯繫～\n在這之前若您有任何需要我們為您協助的地方。\n請您隨時讓我們為您服務祝您今天也是工作事事順心呢。\n';
        msgObj.message = A14;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A14
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A15') {
        let A15 = 'A15:貴賓欲報名時\n請貴賓提供以下資料\n貴賓姓名、連絡電話、生日 (西元 19**/**/**)、身分證字號、email、地址、房型（雙人房為一雙人床或兩單人床，參加一日遊無須填寫）、是否有茹素或不吃牛羊等其他?、收據有需要為您開統編抬頭\n(以上訊息務必皆要提供，若您已是參團的貴賓，只需提供全名及生日 ) ';
        msgObj.message = A15;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A15
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A16') {
        let A16 = 'A16:替貴賓報名完成後\n罐頭訊息您的訂單已完成囉～訂單編號：我們會為您保留您的訂位至 ****前，在您支付訂金後，您的報名才算是完成。';
        msgObj.message = A16;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A16
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A17') {
        let A17 = 'A17:嬰、幼兒童行程費用\n(視各團乘車方式或行程天數而定)\n未滿3歲，則費用為400元不送贈品小孩3～12歲（未滿）費用均減少成人價600元。';
        msgObj.message = A17;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A17
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A18') {
        let A18 = 'A18:訂金繳交\n(一天1000元/人)\n1日遊繳交訂金新台幣1,000元\n2日遊繳交訂金新台幣2,000元\n3日遊繳交訂金新台幣3,000元\n報名完成後，請於訂單保留時間內之上班時間繳交訂金。';
        msgObj.message = A18;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A18
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A19') {
        let A19 = 'A19:已繳完訂金\n客人跟我們說繳費後，跟客人詢問末五碼及金額。告知當線負責的人(登訊息表)，回覆客人確定款項入帳後會再告知確認收到。';
        msgObj.message = A19;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A19
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'A20') {
        let A20 = 'A20:\n單人房差費用\n(**暑假及連續假期房間金額有所異動請至前台再確認**)\n淡水兩天一夜$3200\n苗栗兩天一夜$2200\n台中兩天一夜(林酒店)$2600\n花東三天兩夜$4000\n(暑假及連續假期房間金額有所異動請至前台再確認)\n屏北兩天一夜$2640\n馬祖四天三夜$2200\n馬祖五天四夜$3410\n馬祖六天五夜$3900\n馬祖四天三夜(飛機)$3100\n金門三天兩夜澎湖三天兩夜$6300\n(暑假及連續假期房間金額有所異動請至前台再確認)\n武陵兩天一夜$2100\n彰化兩天一夜$1700\n台南兩天一夜(晶英)$2300\n台南兩天一夜(香格里拉)$2500\n溪頭兩天一夜$2900\n阿里山兩天一夜$4900';
        msgObj.message = A20;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: A20
        });
    }
    /*----------------------------------------------------問題分類(B)------------------------------------------------------------*/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '特殊問題') {
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "title": '特殊問題',
                    "text": 'B1、B2',
                    "actions": [{
                        "type": "message",
                        "label": '何為代收轉付收據',
                        "text": "B1"
                    }, {
                        "type": "message",
                        "label": ' ',
                        "text": " "
                    }, {
                        "type": "message",
                        "label": '國旅卡相關問題',
                        "text": "B2"
                    }]
                }]
            }
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'B1') {
        let B1 = 'B1:何為代收轉付收據?\n根據交通部觀光局和財政部國稅局的規定,由於是屬於轉手業務,所以旅行社不適用於發票!\n只能開立蓋有公司統一發票章的代收轉付收據!\n也因為如此,所以旅行社在收受客人的付款之後,必須將錢轉付與航空公司、飯店、餐廳、購買門票等等、而旅行社與航空公司、飯店、餐廳、購買門票之間也沒有發票的往來!\n也只是一張上面蓋有統一發票章的代收轉付收據,因此相對的旅行社開給客人的也只是一張上面蓋有統一發票章的!\n可是不要小看這張代收轉付收據喔!\n它除了不能對獎之外,效用等同統一發票喔!';
        msgObj.message = B1;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: B1
        });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === 'B2') {
        let B2 = 'B2:\n\n＊公務人員休假時於旅宿業國民旅遊卡特約商店刷卡消費，則相連假日之刷卡消費得否請領補助？與休假期間之相連假日住宿，是否符合補助規定？\nＡ：自 106年 3月 1日起，公務人員於與休假期間之相連假日，於旅宿業國民旅遊卡特約商店住宿刷卡消費，除給予核實補助外，該休假期間及其相連假日之連續期間於各國民旅遊卡特約商店之刷卡消費，得按其行業別核實併入觀光旅遊額度或自行運用額度之補助範圍。公務人員週五請休假，且於週六住宿於旅宿業國民旅遊卡特約商店（週六住宿，週日退房），除該筆住宿費用於觀光旅遊額度核實補助外，週五至週日之連續期間於各國民旅遊卡特約商店之刷卡消費，均得按其行業別核實併入觀光旅遊額度或自行運用額度之補助範圍。\n\n＊使用國民旅遊卡刷卡消費，其刷卡日與實際消費日（休假期間或與休假期間相連假日之連續期間）不同之預購型交易，應如何核銷？\nＡ：預購休假期間或與休假期間相連假日之連續期間之交通票券或旅遊套裝行程等預購型交易，其刷卡日期與實際消費日期不同，特18約商店將使用網際網路服務為持卡人鍵入收單機構代號、特約商店代號、卡號、消費金額、消費日、授權碼、行程起迄日、旅遊地等資料至「國民旅遊卡檢核系統」中，經檢核系統比對特約商店鍵入之資料如符合於休假期間或與休假期間相連假日之連續期間以國民旅遊卡在特約商店刷卡消費等條件，該筆預購型交易，得依休假改進措施規定，按其行業別核實併入觀光旅遊額度或自行運用額度之補助範圍，請於消費時提醒特約商店上開事項，方可正確檢核交易。\n\n＊如預購明年初之觀光旅遊行程，而跨年度適逢機關簽約之發卡機構變更，刷卡付款時，究應使用哪張國民旅遊卡？\nＡ：如跨年度適逢機關簽約之國民旅遊卡發卡機構變更，則應以各該年度有效之國民旅遊卡刷卡消費。是以，如於今年度預購明年之觀光旅遊行程且符合休假補助相關規定，仍應以今年有效之國民旅遊卡刷卡，惟於明年度之強制休假補助費額度內予以補助。\n\n＊購買預購型商品時，是否要請休假刷卡?\nA：購買預購型商品時，毋須請休假刷卡，惟實際消費日須符合休假改進措施之相關規定（休假期間或與休假期間相連假日之連續期間）。';
        msgObj.message = B2;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            type: 'text',
            text: B2
        });
    }

    /*----------------------------------------------------------菜單功能--------------------------------------------------------------*/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '菜單功能') {
        msgObj.message = '已接收菜單功能' + " 餐廳官網  " + "餐廳菜單  ";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        let greet_msg = '菜單功能';
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                "type": "buttons",
                "thumbnailImageUrl": "https://0-t.imgbox.com/Mim9D7AP.jpg",
                "title": "哈囉!\n歡迎來到嘿鬥，請你選擇底下的選項。",
                "text": greet_msg,
                "actions": [{
                        "type": "uri",
                        "label": "餐廳官網",
                        "uri": "http://www.ha-to.com.tw/"
                    },
                    {
                        "type": "message",
                        "label": "餐廳菜單",
                        "text": "餐廳菜單"
                    }
                ]
            }
        })
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '餐廳菜單') {
        msgObj.message = '已接收餐廳菜單' + " 炸豬排定食  " + "海陸烤炸定食  " + "燒煲定食";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);

        let greet_msg = '餐廳菜單';
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                "type": "buttons",
                "thumbnailImageUrl": "https://0-t.imgbox.com/JJO1jat5.jpg",
                "title": "請問你查看什類型的定食？",
                "text": greet_msg,
                "actions": [{
                        "type": "message",
                        "label": "炸豬排定食",
                        "text": "炸豬排定食"
                    },
                    {
                        "type": "message",
                        "label": "海陸烤炸定食",
                        "text": "海陸烤炸定食"
                    }, {
                        "type": "message",
                        "label": "燒煲定食",
                        "text": "燒煲定食"
                    }

                ]
            }
        })
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '燒煲定食') {
        msgObj.message = '已接收顯示燒煲定食' + "薑汁燒肉定食" + "焗燒起司唐揚雞定食" + "風味炒雞肉定食" + "野菇燒煲定食定食(素)" + "北海道極品海煲定食";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "thumbnailImageUrl": 'https://0-t.imgbox.com/1duVl5CJ.jpg',
                    "title": '薑汁燒肉定食',
                    "text": '289元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://7-t.imgbox.com/R2PZXeFo.jpg',
                    "title": '焗燒起司唐揚雞定食',
                    "text": '299元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://9-t.imgbox.com/kl2P3DgM.jpg',
                    "title": '風味炒雞肉定食',
                    "text": '309元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://3-t.imgbox.com/5WEzkwgk.jpg',
                    "title": '野菇燒煲定食定食(素)',
                    "text": '279元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://7-t.imgbox.com/BHnmsW3F.jpg',
                    "title": '北海道極品海煲定食',
                    "text": '399元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }]
            }
        })
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '海陸烤炸定食') {
        msgObj.message = '已接收顯示海陸烤炸定食' + "和風炸雞腿定食" + "南蠻炸雞定食" + "信州味噌雞燒定食" + "日式塔醬竹莢揚物定食" + "海陸組合定食";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "thumbnailImageUrl": 'https://8-t.imgbox.com/4ZDoCORx.jpg',
                    "title": '和風炸雞腿定食',
                    "text": '289元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://6-t.imgbox.com/ig3jEWZ5.jpg',
                    "title": '南蠻炸雞定食',
                    "text": '299元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://6-t.imgbox.com/a45I2TUs.jpg',
                    "title": '信州味噌雞燒定食',
                    "text": '299元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://1-t.imgbox.com/VzHBr5cD.jpg',
                    "title": '日式塔醬竹莢揚物定食',
                    "text": '299元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://3-t.imgbox.com/04EmhHuO.jpg',
                    "title": '海陸組合定食',
                    "text": '329元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }]
            }
        })
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '炸豬排定食') {
        msgObj.message = '已接收顯示炸豬排定食' + "炸里肌肉豬排定食" + "炸腰內肉豬排定食" + "炸起司豬排定食";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "thumbnailImageUrl": 'https://7-t.imgbox.com/hTnKViSP.jpg',
                    "title": '炸里肌肉豬排定食',
                    "text": '269元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://2-t.imgbox.com/CQtDUIb4.jpg',
                    "title": '炸腰內肉豬排定食',
                    "text": '269元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://8-t.imgbox.com/eovywVkf.jpg',
                    "title": '炸起司豬排定食',
                    "text": '309元',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往訂位',
                        "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                    }]
                }]
            }
        })
    }

    /*----------------------------------------------------購物車------------------------------------------------------------*/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '購物車功能') {
        msgObj.message = '已接收顯示購物車功能' + "女裝  " + "男裝  ";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);

        let greet_msg = '我是UNI小精靈!\n歡迎來到Uniqlo的商店，選擇下面選項搜尋你要的服飾。\n\n選擇服飾後，會前往Uniqlo購物車(確認此商品是否還有存貨)';
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                "type": "buttons",
                "text": greet_msg,
                "actions": [{
                        "type": "message",
                        "label": "女裝",
                        "text": "女裝"
                    },
                    {
                        "type": "message",
                        "label": "男裝",
                        "text": "男裝"
                    },
                ]
            }
        })
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '女裝') {
        msgObj.message = '已接收顯示女裝' + "女裝POLO衫  " + "女裝T恤(長袖/七分袖)";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);

        let greet_msg = '你想找哪一類的衣服呢？';
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                "type": "buttons",
                "thumbnailImageUrl": "https://3-t.imgbox.com/ZnXsAKmo.jpg",
                "text": greet_msg,
                "actions": [{
                        "type": "message",
                        "label": "女裝POLO衫",
                        "text": "女裝POLO衫"
                    },
                    {
                        "type": "message",
                        "label": "女裝T恤(長袖/七分袖)",
                        "text": "女裝T恤(長袖/七分袖)"
                    },
                ]
            }
        })
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '男裝') {
        msgObj.message = '已接收顯示男裝' + "男裝POLO衫  " + "男裝牛仔褲  ";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);

        let greet_msg = '你想找哪一類的衣服呢？';
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                "type": "buttons",
                "thumbnailImageUrl": "https://0-t.imgbox.com/urSn5N9M.jpg",
                "text": greet_msg,
                "actions": [{
                        "type": "message",
                        "label": "男裝POLO衫",
                        "text": "男裝POLO衫"
                    },
                    {
                        "type": "message",
                        "label": "男裝牛仔褲",
                        "text": "男裝牛仔褲"
                    },
                ]
            }
        })
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '女裝POLO衫') {
        msgObj.message = '已接收顯示女裝POLO衫' + "彈性網眼POLO衫(女)" + "寬版開領POLO衫(女)" + "羅紋POLO衫(短袖)(女)";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "thumbnailImageUrl": 'https://7-t.imgbox.com/7ldQdjRB.jpg',
                    "title": '彈性網眼POLO衫(女)',
                    "text": 'NT$590',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往購物車',
                        "uri": 'http://www.uniqlo.com/tw/store/addcart/goods/182222-69'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://7-t.imgbox.com/mNhSZSKr.jpg',
                    "title": '寬版開領POLO衫(女)',
                    "text": 'NT$590',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往購物車',
                        "uri": 'http://www.uniqlo.com/tw/store/goods/188203'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://6-t.imgbox.com/T5AWfToR.jpg',
                    "title": '羅紋POLO衫(短袖)(女)',
                    "text": 'NT$390',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往購物車',
                        "uri": 'http://www.uniqlo.com/tw/store/goods/193086'
                    }]
                }]
            }
        })
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '女裝T恤(長袖/七分袖)') {
        msgObj.message = '已接收女裝T恤' + "一字領上衣T恤(女)" + "SUPIMA COTTON 圓領T恤(7分袖)(女)" + "SUPIMA COTTON 圓領T恤(長袖)(女)";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "thumbnailImageUrl": 'https://9-t.imgbox.com/IqZyIqGX.jpg',
                    "title": '一字領上衣T恤(女)',
                    "text": 'NT$590',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往購物車',
                        "uri": 'http://www.uniqlo.com/tw/store/goods/199888'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://6-t.imgbox.com/gDRPXNSC.jpg',
                    "title": 'SUPIMA COTTON 圓領T恤(7分袖)(女)',
                    "text": 'NT$390',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往購物車',
                        "uri": 'http://www.uniqlo.com/tw/store/goods/182153'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://0-t.imgbox.com/q7MCHAQR.jpg',
                    "title": 'SUPIMA COTTON 圓領T恤(長袖)(女)',
                    "text": 'NT$390',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往購物車',
                        "uri": 'http://www.uniqlo.com/tw/store/goods/182154'
                    }]
                }]
            }
        })
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '男裝POLO衫') {
        msgObj.message = '已接收顯示男裝POLO衫' + "DRY 網眼條紋POLO衫(短袖)(男)" + "DRY EX POLO衫(短袖)(男)" + "DRY 舒適襯衫領POLO衫(短袖)(鈕釦領)(男)";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "thumbnailImageUrl": 'https://8-t.imgbox.com/RNwQRq98.jpg',
                    "title": 'DRY 網眼條紋POLO衫(短袖)(男)',
                    "text": 'NT$790',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往購物車',
                        "uri": 'http://www.uniqlo.com/tw/store/goods/195393'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://9-t.imgbox.com/Htmjhe7W.jpg',
                    "title": 'DRY EX POLO衫(短袖)(男)',
                    "text": 'NT$790',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往購物車',
                        "uri": 'http://www.uniqlo.com/tw/store/goods/169372'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://2-t.imgbox.com/LSYcL4tL.jpg',
                    "title": 'DRY 舒適襯衫領POLO衫(短袖)(鈕釦領)(男)',
                    "text": 'NT$790',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往購物車',
                        "uri": 'http://www.uniqlo.com/tw/store/goods/193623'
                    }]
                }]
            }
        })
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '男裝牛仔褲') {
        msgObj.message = '已接收顯示男裝牛仔褲' + "Slim Fit 束口牛仔褲(男)" + "Regular Fit 刷破牛仔褲(男)" + "MIRACLE AIR REGULAR FIT 牛仔褲(男)";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                type: 'carousel',
                "columns": [{
                    "thumbnailImageUrl": 'https://6-t.imgbox.com/BHbTLzct.jpg',
                    "title": 'Slim Fit 束口牛仔褲(男)',
                    "text": 'NT$990',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往購物車',
                        "uri": 'http://www.uniqlo.com/tw/store/goods/183006'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://7-t.imgbox.com/fsfzvmNz.jpg',
                    "title": 'Regular Fit 刷破牛仔褲(男)',
                    "text": 'NT$1490',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往購物車',
                        "uri": 'http://www.uniqlo.com/tw/store/goods/192943'
                    }]
                }, {
                    "thumbnailImageUrl": 'https://2-t.imgbox.com/1CY1M5aq.jpg',
                    "title": 'MIRACLE AIR REGULAR FIT 牛仔褲(男)',
                    "text": 'NT$1490',
                    "actions": [{
                        "type": 'uri',
                        "label": '前往購物車',
                        "uri": 'http://www.uniqlo.com/tw/store/goods/403888'
                    }]
                }]
            }
        })
    }
    /*----------------------------------------------------問卷功能------------------------------------------------------------*/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '問卷功能') {
        msgObj.message = '已接收問卷功能' + "Google Form問卷" + "SurveyCake問卷" + "Line@問卷";
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
                "type": "buttons",
                "title": "問卷功能列表",
                "text": "請選擇要做哪份問卷。",
                "actions": [{
                        "type": "uri",
                        "label": "Google Form問卷",
                        "uri": 'https://docs.google.com/a/fongyuinvest.com/forms/d/e/1FAIpQLScjfeF9gEmXjk_MgI7cFPpZoTTJU6KCpVv-igEJb5xvdUGFyg/viewform'
                    },
                    {
                        "type": "uri",
                        "label": "SurveyCake問卷",
                        "uri": 'https://www.surveycake.com/s/Mv3RD'
                    }, {
                        "type": "message",
                        "label": "Line@問卷",
                        "text": "Line@問卷"
                    }

                ]
            }
        })
    }
      else {
        msgObj.message = message_lineTochat;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        // 先測試line 部分
        apiai(msgObj);
      }
    }

    // function
    function apiai(obj) {
      var request = apiai_app.textRequest(obj.message, {
        sessionId: '0896c04e-218b-4951-b75d-2d09e1ce7d4b'
      });
      request.on('response', function(response) {
        let action = response.result.action ;
        let speech = response.result.fulfillment.messages[0].speech ;
        let parameter = response.result.parameters ;
        let complete = !response.result.actionIncomplete ;
        let userSay = response.result.resolvedQuery ;

        if(action != 'input.unknown'){
          console.log(response.result) ;
          msgObj.owner = 'agent';
          msgObj.name = 'api.ai';
          if(action == 'input.welcome'||action == 'timeGreeting'){
            obj.message = '已接收選項'+"購買方案, "+"服務時段, "+'問卷調查';
            emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 0);
            event.reply({
              "type": "template",
              "altText": "this is a buttons template",
              "template": {
                "type": "buttons",
                "title": "問題選項",
                "text": "請選擇一個詢問主題",
                "actions": [{
                  "type": "postback",
                  "label": "購買方案",
                  "data": "purchasePlan"
                },{
                  "type": "postback",
                  "label": "服務時段",
                  "data": "serviesHour"
                },{
                  "type": "postback",
                  "label": "問卷調查",
                  "data":"Questionnaire_start"
                }]
              }
            });
          }
          else if(action == 'tinistart.faq'){
            let type = speech ;
            //let content = '';
            let incomplete = response.result.actionIncomplete ;
            console.log(type) ;
            if(incomplete){
              msgObj.message = speech;
              event.reply({ type: 'text', text: speech });
            }
            else if(type == 'principal'){
              msgObj.message = "關於負責人";
              event.reply({
                "type": "template",
                "altText": "關於負責人",
                "template": {
                  "type": "buttons",
                  "title": "關於負責人",
                  "text": "以下是有關負責人的常見問題",
                  "actions": [{
                    "type": "postback",
                    "label": "請問什麼樣的人可以擔任負責人?",
                    "data": "1-1"
                  }]
                }
              });
            }
            else if(type == 'money'){
              msgObj.message = '關於資本額';
              event.reply({
                "type": "template",
                "altText": "關於資本額",
                "template": {
                  "type": "buttons",
                  "title": "關於資本額",
                  "text": "以下是有關資本額的常見問題",
                  "actions": [{
                    "type": "postback",
                    "label": "公司的資本額有最低限制嗎",
                    "data": "2-1",
                  },{
                    "type": "postback",
                    "label": "資本額要在銀行放多久才能用",
                    "data": "2-2",
                  },{
                    "type": "postback",
                    "label": "資本額一定要經過會計師簽證查核嗎",
                    "data": "2-3",
                  },{
                    "type": "postback",
                    "label": "我能請人代做資本額嗎",
                    "data": "2-4",
                  }]
                }
              });
            }
            else if(type == 'servies'){
              msgObj.message = '關於附加服務';
              event.reply({
                "type": "template",
                "altText": "關於附加服務",
                "template": {
                  "type": "buttons",
                  "title": "關於附加服務",
                  "text": "以下是有關附加服務的常見問題",
                  "actions": [{
                    "type": "postback",
                    "label": "什麼是商務中心",
                    "data": "3-1",
                  },{
                    "type": "postback",
                    "label": "商務中心可以提供什麼服務",
                    "data": "3-2",
                  },{
                    "type": "postback",
                    "label": "App製作是怎麼樣的服務",
                    "data": "3-3",
                  },{
                    "type": "postback",
                    "label": "什麼樣的人適合使用商務中心",
                    "data": "3-4",
                  }]
                }
              });
            }
            else if(type == 'bank'){
              msgObj.message = '關於銀行帳戶';
              event.reply({
                "type": "template",
                "altText": "關於銀行帳戶",
                "template": {
                  "type": "buttons",
                  "title": "關於銀行帳戶",
                  "text": "以下是有關銀行帳戶的常見問題",
                  "actions": [{
                    "type": "postback",
                    "label": "如何挑選辦理的銀行",
                    "data": "4-1",
                  },{
                    "type": "postback",
                    "label": "如何將公司籌備處帳戶變成正式帳戶",
                    "data": "4-2",
                  },{
                    "type": "postback",
                    "label": "我可以在不同銀行開設公司銀行帳戶嗎",
                    "data": "4-3",
                  }]
                }
              });
            }
            else if(type == 'starting'){
              msgObj.message = '關於公司設立';
              event.reply({
                "type": "template",
                "altText": "關於公司設立",
                "template": {
                  "type": "carousel",
                  "columns": [
                    {
                      "text": "以下是有關公司設立的常見問題",
                      "actions": [
                        {
                          "type": "postback",
                          "label": "印章不見時有什麼要注意的?",
                          "data": "5-1",
                        },
                        {
                          "type": "postback",
                          "label": "我可以不設立公司或行號就開始營業嗎?",
                          "data": "5-2",
                        },
                        {
                          "type": "postback",
                          "label": "想用的名稱已被使用，但處於解散狀態",
                          "data": "5-3",
                        }
                      ]
                    },{
                      "text": "以下是有關公司設立的常見問題",
                      "actions": [
                        {
                          "type": "postback",
                          "label": "想開小吃店或小店面還需要設立公司嗎",
                          "data": "5-4",
                        },
                        {
                          "type": "postback",
                          "label": "請問我需要準備些什麼東西?",
                          "data": "5-5",
                        },
                        {
                          "type": "postback",
                          "label": "沒有建物所有權狀的話要怎麼辦?",
                          "data": "5-6",
                        }
                      ]
                    },{
                      "text": "以下是有關公司設立的常見問題",
                      "actions": [
                        {
                          "type": "postback",
                          "label": "如果公司大小章不見的話要怎麼處理?",
                          "data": "5-7",
                        },
                        {
                          "type": "postback",
                          "label": "外國人在台灣設立公司時的步驟有什麼不同?",
                          "data": "5-8",
                        },
                        {
                          "type": "postback",
                          "label": "公司申請要用的文件和資料要怎樣交給你們?",
                          "data": "5-9",
                        }
                      ]
                    },{
                      "text": "以下是有關公司設立的常見問題",
                      "actions": [
                        {
                          "type": "postback",
                          "label": "我該設立有限公司還是股份有限公司?",
                          "data": "5-10",
                        },
                        {
                          "type": "postback",
                          "label": "營業項目要設多少個?有限制嗎?",
                          "data": "5-11",
                        },
                        {
                          "type": "postback",
                          "label": " ",
                          "data": " ",
                        }
                      ]
                    }
                  ]
                }
              });
            }
            else if(type == 'business'){
              msgObj.message = '關於營業項目';
              event.reply({
                "type": "template",
                "altText": "關於營業項目",
                "template": {
                  "type": "buttons",
                  "title": "關於營業項目",
                  "text": "以下是有關營業項目的常見問題",
                  "actions": [{
                    "type": "postback",
                    "label": "什麼是特許營業項目",
                    "data": "6-1",
                  },{
                    "type": "postback",
                    "label": "我能自行增加製造產品的項目嗎",
                    "data": "6-2",
                  }]
                }
              });
            }
            else if(type == 'price'){
              msgObj.message = '關於價格方案';
              event.reply({
                "type": "template",
                "altText": "關於價格方案",
                "template": {
                  "type": "buttons",
                  "title": "關於價格方案",
                  "text": "以下是有關價格方案的常見問題",
                  "actions": [{
                    "type": "postback",
                    "label": "為什麼有特許營業項目時要另外計算費用?",
                    "data": "7-1",
                  },{
                    "type": "postback",
                    "label": "兩個方案差別在哪?",
                    "data": "7-2",
                  }]
                }
              });
            }
            else if(type == 'insurance'){
              msgObj.message = '關於勞健保';
              event.reply({
                "type": "template",
                "altText": "關於勞健保",
                "template": {
                  "type": "buttons",
                  "title": "關於勞健保",
                  "text": "以下是有關勞健保的常見問題",
                  "actions": [{
                    "type": "postback",
                    "label": "我的員工很少，能不投保勞健保嗎?",
                    "data": "10-1",
                  },{
                    "type": "postback",
                    "label": "我是負責人，我要怎麼投勞保?",
                    "data": "10-2",
                  },{
                    "type": "postback",
                    "label": "我是負責人，我要怎麼投健保?",
                    "data": "10-3",
                  },{
                    "type": "postback",
                    "label": "現在加保勞健保會被追繳勞健保嗎?",
                    "data": "10-4",
                  }]
                }
              });
            }
            else if(type == 'other'){
              msgObj.message = '常見問題';
              event.reply({
                "type": "template",
                "altText": "常見問題",
                "template": {
                  "type": "carousel",
                  "columns": [
                    {
                      "text": "以下是其他常見問題",
                      "actions":[
                        {
                          "type": "postback",
                          "label": "請問貴公司的提供服務的區域有哪些?",
                          "data": "8-1",
                        },
                        {
                          "type": "postback",
                          "label": "請問貴公司的服務時間?",
                          "data": "8-2",
                        },
                        {
                          "type": "postback",
                          "label": "你們怎麼幫我們進行客服代理的服務?",
                          "data": "8-3",
                        }
                      ]
                    },{
                      "text": "以下是其他常見問題",
                      "actions":[
                        {
                          "type": "postback",
                          "label": "我要怎麼向你們付費並取得正式文件?",
                          "data": "8-4",
                        },
                        {
                          "type": "postback",
                          "label": "我可以不用統一發票嗎?",
                          "data": "9-1",
                        },
                        {
                          "type": "postback",
                          "label": " ",
                          "data": " ",
                        }
                      ]
                    }
                  ]
                }
              });
            }
            else console.log("api.ai type error");
            emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 0);
            return ;
          }
          else if(action == 'ticket' ){
            ticket.email = parameter.email ;
            ticket.phone = parameter.phone ;
            ticket.goods = parameter.goods ;
            ticket.name = receiver_name ;
            ticket.lineId = receiverId;
          }
          else if(action == 'ticket.description'){
            ticket.description = userSay ;
            ticket.priority = parameter.priority ;
            if(complete) createTicket(ticket);
          }
          obj.message = speech ;
          emitIO_and_pushDB(obj, pictureUrl, channelId, receiverId, 0);
          event.reply({ type: 'text', text: msgObj.message });
        }
        else{console.log(action);}

      });
      request.on('error', function(error) {
        console.log(error);
      });
      request.end();

    }

    function createTicket(obj) {

      var PATH = "/api/v2/tickets";
      var URL =  "https://" + FD_ENDPOINT + ".freshdesk.com"+ PATH;
      console.log('ticket:');
      console.log(obj);

      let priority ;
      if(obj.priority.indexOf('high') != -1) priority = 3 ;
      else if(obj.priority.indexOf('medium') != -1)priority = 2 ;
      else priority = 1;

      var fields = {
        'description': obj.description,
        'email': obj.email,
        'name': obj.name,
        'phone': obj.phone,
        'priority': priority,
        'status': 2,
        'subject': '收到_'+obj.goods+'_訂單'
        // 'tags': [obj.lineId.substring(1)]
      }
      //console.log('fields:');
      //console.log(fields);

      for( let prop in chatData ) {
        if(chatData[prop].Profile.userId == obj.lineId) {
          console.log("Ticket find user " + obj.lineId + " in database");
          let updateObj = {};
          if(chatData[prop].Profile.email == undefined || chatData[prop].Profile.email == '' || chatData[prop].Profile.email == null){
            updateObj['/'+prop+'/Profile/email/'+0] = obj.email;
          }
          else{
            let length = chatData[prop].Profile.email.length ;
            updateObj['/'+prop+'/Profile/email/'+length] = obj.email;
          }
          newDBRef.update(updateObj) ;
          newDBRef.child(prop).child("Profile").update({phone: obj.phone});
          console.log('firebase update ticket info complete') ;
          break;
        }
      }

      var Request = unirest.post(URL);
      console.log('fields:');
      console.log(fields);
      Request.auth({
        user: API_KEY,
        pass: "X",
        sendImmediately: true
      })
      .type('json')
      .send(fields)
      .end(function(response){
        console.log(response.body)
        console.log("Response Status : " + response.status)
        if(response.status == 201){
          console.log("Location Header : "+ response.headers['location'])
        }
        else{
          console.log("X-Request-Id :" + response.headers['x-request-id']);
        }
      });
    }

    function vote(voter, time, categoryName, workerName, groupName, score) {
        console.log(time);
        let categoryId;
        let workerId;
        let groupId;

        let timer = setInterval(insert_vote, 10);
        //因前面幾個資料庫操作是異步操作 可能會發生還沒抓完資料就繼續執行的情況
        //所以用setInterval包起來，確認值都有收到後，再寫進資料庫並停止setInterval
        function insert_vote() {
            if (!categoryId || !workerId || !groupId) return;
            clearInterval(timer);
            let obj = {
                vote_voter: voter,
                vote_time: time,
                category_id: categoryId,
                worker_id: workerId,
                group_id: groupId,
                vote_score: score
            };
            console.log("to insert obj = ");
            console.log(obj);
        } //end insert_vote
    } // end of vote
    //function
  });
}

function bot_on_postback(event){
  console.log("postback");
  let data = event.postback.data ;
  let receiverId = event.source.userId;
  let receiver_name;
  let nowTime = Date.now();
  console.log(event);

  event.source.profile().then(function(profile){
    receiver_name = profile.displayName;
    if( receiver_name==undefined ) receiver_name = "userName_undefined";

    var msgObj = {
      owner: "agent",
      name: 'api.ai',
      time: nowTime
    };

    if(data.indexOf('purchasePlan') != -1){
      let hr = data.substring(13);
      console.log("hour:"+hr) ;
      switch (hr) {
        case '4':
        msgObj.message = "4小時方案   15,888 元  \n 4小時方案/每天   $15,888每月" ;
        break;
        case '8':
        msgObj.message = "8小時方案   21,888 元  \n 8小時方案/每天   $21,888每月" ;
        break;
        case '16':
        msgObj.message = "16小時方案   39,888 元  \n 16小時方案/每天   $39,888每月" ;
        break;
        default:
        msgObj.message = '已發送購買方案'+"4小時方案  "+"8小時方案  "+"16小時方案  ";
        event.reply({
          "type": "template",
          "altText": "購買方案說明",    //text that customer see at chat list
          "template": {
            "type": "buttons",
            "title": "購買方案說明",
            "text": "請選擇一個方案",
            "actions": [{
              "type": "postback",
              "label": "4小時方案",
              "data": "purchasePlan-4"
            },{
              "type": "postback",
              "label": "8小時方案",
              "data": "purchasePlan-8"
            },{
              "type": "postback",
              "label": "16小時方案",
              "data": "purchasePlan-16"
            }]
          }
        });
        break;

      }
      emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
      event.reply({"type":"text","text":msgObj.message}) ;
    }
    else if(data == 'serviesHour'){
      msgObj.message =
      "我們的服務時如下:\n"+
      "「0700~1100」\n "+
      "「1100~1500」\n "+
      "「1500~1900」\n "+
      "「1900~2300」\n "+
      " 兩個時段必須是「連續的」\n"+
      "「0700~1100」及「1100~1500」\n"+
      "「1100~1500」及「1500~1900」\n"+
      "「1500~1900」及「1900~2300」。" ;

      console.log(msgObj.message) ;
      emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
      event.reply({"type":"text","text":msgObj.message}) ;
    }
    else if(data.indexOf('Questionnaire') != -1){
      let pos = data.indexOf(':');
      let para = data.substring(14,pos);
      let value = data.substring(pos+1);
      let id = event.source.userId ;
      //console.log(pos+" "+id+":"+para+":"+value) ;
      //console.log(event.message) ;
      if(pos != -1){
        let obj = {} ;
        obj.id = id ;
        obj.para = para ;
        obj.value = value ;
        updateProfile(obj) ;
      }

      if(para == '性別'){
        msgObj.message = '詢問客戶資料(居住地)';
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
          "type": "template",
          "altText": "問券調查",
          "template": {
            "type": "buttons",
            "title": "問券調查:地區",
            "text": "請選擇您的性別",
            "actions": [{
              "type": "postback",
              "label": "地區:北部",
              "text": "地區:北部",
              "data": "Questionnaire_地區:北部"
            },{
              "type": "postback",
              "label": "地區:中部",
              "text": "地區:中部",
              "data": "Questionnaire_地區:中部"
            },{
              "type": "postback",
              "label": "地區:南部",
              "text": "地區:南部",
              "data": "Questionnaire_地區:南部"
            },{
              "type": "postback",
              "label": "地區:東部",
              "text": "地區:東部",
              "data": "Questionnaire_地區:東部"
            }]
          }
        });

      }
      else if(para == '地區'){
        msgObj.message = '詢問客戶資料(年齡層)';
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({
          "type": "template",
          "altText": "問券調查part2",
          "template": {
            "type": "carousel",
            "columns": [
              {
                "text": "您的年齡層。請左右滑動並選擇您的年齡層",
                "actions": [
                  {
                    "type": "postback",
                    "label": "年齡:20以下",
                    "text": "年齡:20以下",
                    "data": "Questionnaire_年齡:20以下"
                  },
                  {
                    "type": "postback",
                    "label": "年齡:21-30",
                    "text": "年齡:21-30",
                    "data": "Questionnaire_年齡:21-30"
                  },
                  {
                    "type": "postback",
                    "label": "年齡:31-40",
                    "text": "年齡:31-40",
                    "data": "Questionnaire_年齡:31-40"
                  }
                ]
              },
              {
                "text": "您的年齡層。請左右滑動並選擇您的年齡層",
                "actions": [
                  {
                    "type": "postback",
                    "label": "年齡:41-50",
                    "text": "年齡:41-50",
                    "data": "Questionnaire_年齡:41-50"
                  },
                  {
                    "type": "postback",
                    "label": "年齡:51-64",
                    "text": "年齡:51-64",
                    "data": "Questionnaire_年齡:51-64"
                  },
                  {
                    "type": "postback",
                    "label": "年齡:65以上",
                    "text": "年齡:65以上",
                    "data": "Questionnaire_年齡:65以上"
                  }
                ]
              }
            ]
          }
        });
      }
      else if(para == '年齡'){
        msgObj.message = '感謝您填寫問卷!' ;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        //bot.push(obj.id,msgObj.message);
        event.reply({ type: 'text', text: msgObj.message });
      }
      else{
        event.reply({
          "type": "template",
          "altText": "問券調查part1",
          "template": {
            "type": "buttons",
            "title": "問券調查:性別",
            "text": "請選擇您的性別",
            "actions": [{
              "type": "postback",
              "label": "性別:男",
              "text": "性別:男",
              "data": "Questionnaire_性別:男"
            },{
              "type": "postback",
              "label": "性別:女",
              "text": "性別:女",
              "data": "Questionnaire_性別:女"
            }]
          }
        });
        msgObj.message = '詢問客戶資料(性別)';
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
      }


    }
    else{
      tinistartAns(event);
    }

    function tinistartAns(event) {
      var gsjson = require('google-spreadsheet-to-json');

      gsjson({
        spreadsheetId: '1ZhR-f6BVHp4kIzBQL_VK9BDP4AS0KDTESYqq22RrtOA',
        hash : 'id'
        // other options...
      })
      .then(function(result) {
        let ansId = event.postback.data;
        console.log(ansId);
        //console.log(result.length);
        //console.log(result);
        let ans = result[ansId].ans ;
        let que = result[ansId].question ;
        var msg = 'Q :\n'+que+'\n'+'A :\n'+ans ;
        msgObj.owner = "agent";
        msgObj.name ='apiai';
        msgObj.time = nowTime;
        msgObj.id = receiverId;
        msgObj.message = msg ;
        emitIO_and_pushDB(msgObj, pictureUrl, channelId, receiverId, 1);
        event.reply({ type: 'text', text: msg });
      })
      .catch(function(err) {
        console.log(err.message);
        console.log(err.stack);
      });

    }
    function updateProfile(survey) {
      /*
      survey:{id ,para ,value }
      //*//*
      let survey = {id:'',para:'',value:''};
      let pos = event.message.text.indexOf(':');
      let para = event.message.text.substring(0,pos);
      let value = event.message.text.substring(pos+1);
      survey.id = event.source.userId;
      survey.para = para;
      survey.value = value ;
      //*/
      console.log(survey);
      for( let i in chatData ) {
        if( chatData[i].Profile.userId == survey.id ) {
          console.log('match!updating profile...')
          let obj = {};
          obj['/'+survey.para] = survey.value;
          newDBRef.child(i).child("Profile").update(obj);
          break;
        }
      }
    }

  });
}

// 群組webhook
app.post('/linehook1', function() {
  console.log("linehook1 arguments length = "+arguments.length);
  linebotParser[0](arguments[0], arguments[1], arguments[2]);
});
app.post('/linehook2', function() {
  console.log("linehook2 arguments length = "+arguments.length);
  linebotParser[1](arguments[0], arguments[1], arguments[2]);
});

/**
* Socket.io 傳訊息
*/

io.sockets.on('connection', (socket) => {

  socket.on('get inside chat', (data) => {
    let thisAgentData = [];
    for( let i in agentChatData ){
      if( agentChatData[i].Profile.agent.indexOf(data.id) != -1 ) thisAgentData.push( agentChatData[i] );
    }

    socket.emit('push inside chat', thisAgentData);
  });

  // 更新群組
  socket.on('update bot', (data) => {
    update_line_bot(data);
  });

  socket.on('request line channel', (userId)=> {
    console.log("userId = "+userId);
    firebase.database().ref('users/' + userId).once('value', snap => {
      let chatInfo = snap.val();
      let chanId_1 = chatInfo.chanId_1;
      let chanId_2 = chatInfo.chanId_2;
      console.log("response line channel, channelId = "+chanId_1+', '+chanId_2);
      socket.emit('response line channel', {
        chanId_1: chanId_1,
        chanId_2: chanId_2
      });
    });
  });
  function update_line_bot( chanInfo ) {
    console.log("update_line_bot");
    console.log("chanInfo: ");
    console.log(chanInfo);
    if( bot[0] ) bot[0]._events = {};
    if( bot[1] ) bot[1]._events = {};
    for( let i=0; i<chanInfo.length; i++ ) {
      console.log("update Line channel_"+i+" information.");
      bot[i] = linebot(chanInfo[i]);
      linebotParser[i] = bot[i].parser();
      bot[i].on('message', bot_on_message);
      bot[i].on('postback', bot_on_postback);

      channelIds[i] = chanInfo[i].channelId;

      console.log('update done');
    }
  }


  // 新使用者
  socket.on('new user', (data, callback) => {
    console.log(data);
    if (data in users) {
      callback(false);
    }
    else {
      callback(true);
      socket.nickname = data;
      users[socket.nickname] = socket;
    }
  });

  socket.on('get tags from chat', data => {
    console.log("tags socket");
    socket.emit('push tags to chat', tagsData);
  });

  socket.on('get tags from tags', data => {
    socket.emit('push tags to tags', tagsData);
  });

  socket.on('update tags', data => {
    console.log(data);
    let updateObj = {};
    updateObj['/Data'] = data;
    tagsRef.update(updateObj);
  });

  socket.on('get json from back', (data, callback) => {
    console.log("chat data socket");
    let sendData = [];
    for( let i in chatData ) {
      console.log("i="+i);
      let profile = chatData[i].Profile;
      let _lastMsg = chatData[i].Messages[ chatData[i].Messages.length-1 ];
      if( profile.recentChat != _lastMsg.time ) {
        console.log( "ID = "+profile.userId+" update time!");
        profile.recentChat = _lastMsg.time;

        let timeArr = chatData[i].Messages.map( function(ele) {
          return ele.time;
        });
        let times = [];
        let j=0;
        const GAP = 1000*60*15; //15 min
        let headTime;
        let tailTime;
        while( j<timeArr.length ) {
          // console.log("j = "+j);
          headTime = tailTime = timeArr[j];
          while( timeArr[j]-tailTime < GAP ) {
            tailTime = timeArr[j];
            j++;
            if( j==timeArr.length ) break;
          }
          let num = tailTime-headTime;
          if( num<1000 ) num = 1000;
          times.push(num);
        }
        let sum = 0;
        for( let j in times ) sum += times[j];
        sum /= 60000;
        profile.totalChat = sum;
        profile.avgChat = sum/times.length;
        profile.chatTimeCount = times.length;
        if( isNaN(profile.avgChat) || profile.avgChat<1 ) profile.avgChat = 1;
        if( isNaN(profile.totalChat) || profile.totalChat<1 ) profile.totalChat  = 1;

        let updateObj = {};
        newDBRef.child(i).child("Profile").update({
          "avgChat": profile.avgChat,
          "totalChat": profile.totalChat,
          "chatTimeCount": profile.chatTimeCount,
          "recentChat": profile.recentChat,
          "平均每次聊天時間": profile.avgChat,
          "總共聊天時間": profile.totalChat,
          "聊天次數": profile.chatTimeCount,
          "上次聊天時間": profile.recentChat
        });
      }

      console.log("update done or no need up");
      let msgs = chatData[i].Messages;
      let position = 0;
      if( msgs.length>20 ) {
        position = msgs.length-20;
        msgs = msgs.slice(position);
      }
      sendData.push({
        Messages: msgs,
        position: position,
        Profile: profile
      });
      console.log("push done");
    }
    // console.log(sendData);
    socket.emit('push json to front', sendData);
    console.log('push json to front');
    console.log(sendData);
  });

  socket.on('upload history msg from front', data => {
    console.log('upload history msg of userId = '+data.userId+', head = '+data.head+', tail = '+data.tail);
    let userId = data.userId;
    let head = data.head;
    let tail = data.tail;
    let sendData = [];

    for( let i in chatData ) {
      if( chatData[i].Profile.userId==userId ) {
        for( let j=head; j<tail+1; j++ ) {
          // console.log(chatData[i].Messages[j]);
          sendData.push( chatData[i].Messages[j] );
        }
        break;
      }
    }
    console.log("sendData = ");
    console.log(sendData);
    socket.emit('upload history msg from back', {
      userId: userId,
      messages: sendData
    });
  });

  socket.on('read message', (data) => {
    console.log("agent read message of user "+data.id);
    for( let i in chatData ) {
      if( chatData[i].Profile.userId == data.id ) {
        newDBRef.child(i).child("Profile").update({
          "unRead": 0,
        });
        break;
      }
    }
  });

  // 從SHIELD chat傳送訊息
  socket.on('send message', (data, callback) => {
    console.log(data);
    let msg = data.msg.trim();
    let agent_sendTo_receiver = data.id.trim();
    let msg_time = data.msgtime;
    let chanId = data.room;
    console.log(agent_sendTo_receiver);

    if(socket.nickname !== undefined){
      agent_nickname = socket.nickname;
    } else {
      agent_nickname = 'agent';
    }

    var message;
    let nowTime = Date.now();

    {
      //------FACEBOOK----
      if (data.msg.startsWith('<img')) {
          let link = data.msg.substr(10);
          console.log('this is link');
          console.log(link);

          fb_bot.sendImageMessage(data.id, link, true);
      } else if (data.msg.startsWith('<video')) {
          let link = data.msg.substr(29);
          console.log('this is link');
          console.log(link);

          fb_bot.sendVideoMessage(data.id, link, true);
      } else if (data.msg.startsWith('<audio')) {
          let link = data.msg.substr(29);
          console.log('this is link');
          console.log(link);

          fb_bot.sendAudioMessage(data.id, link, true);
      }
      
      if(msg.includes('/image')){
        let link = msg.substr(7);
        // console.log(link);
        message = {
          type: "image",
          originalContentUrl: link,
          previewImageUrl: link
        };
      }
      else if(msg.includes('/audio')){
        let link = msg.substr(7);
        // console.log(link);
        message = {
          type: "audio",
          originalContentUrl: link,
          duration: 6000
        };
      }
      else if(msg.includes('/video')){
        let link = msg.substr(7);
        // console.log(link);
        message = {
          type: "video",
          originalContentUrl: link,
          previewImageUrl: "https://www.movienewsguide.com/wp-content/uploads/2016/03/Phoenix-Suns.jpg"
        };
      }
      else if (msg.includes('/sticker')) {
        message = {
          type: "sticker",
          packageId: parseInt(msg.substr(msg.indexOf(' '))),
          stickerId: parseInt(msg.substr(msg.lastIndexOf(' ')))
        };
      }
      else {
        message = {
          type: "text",
          text: msg
        };
        fb_bot.sendTextMessage(data.id, data.msg);
      }
    }
    // 訊息傳到LINE
    if (agent_sendTo_receiver !== undefined ) { // 需要新增一個判斷式來分別出要傳訊息給哪一間聊天室
      if(chanId === 'Line_1_room'){
        bot[0].push(agent_sendTo_receiver, message);
      } else if(chanId === 'Line_2_room') {
        bot[1].push(agent_sendTo_receiver, message);
      } else {
        console.log('push to fb');
      }
    }
    else {
      console.log("agent_sendTo_receiver undefined!");
    }

    for( let i in chatData ) {
      if( chatData[i].Profile.userId === data.id ) {
        var unRead_fromProfile = chatData[i].Profile.unRead;
        break;
      }
    }

    var msgObj = {
      owner: "agent",
      name: agent_nickname,
      time: nowTime,
      message: "undefined_message"
    };

    //------FACEBOOK-------
    if (msg.startsWith('<img')){
        msgObj.message = data.msg+'"/>';
        emitIO_and_pushDB(msgObj, null, 'FB', agent_sendTo_receiver, 0);
    }
    else if (msg.startsWith('<video')){
        msgObj.message = data.msg+ '" type="video/mp4"></video>';
        emitIO_and_pushDB(msgObj, null, 'FB', agent_sendTo_receiver, 0);
    }
    else if (msg.startsWith('<audio')){
        msgObj.message = data.msg+ '" type="audio/mpeg"></audio>';
        emitIO_and_pushDB(msgObj, null, 'FB', agent_sendTo_receiver, 0);
    }
    // LINE
    if (msg.includes('/image')) {
      msgObj.message = 'Send image to user';
      if(chanId === 'Line_1_room'){
        emitIO_and_pushDB(msgObj, null, channelIds[0], agent_sendTo_receiver, 0);
      } else if(chanId === 'Line_2_room') {
        emitIO_and_pushDB(msgObj, null, channelIds[1], agent_sendTo_receiver, 0);
      } else {
        console.log('push to fb')
      }
    }
    else if (msg.includes('/audio')) {
      msgObj.message = 'Send audio to user';
      if(chanId === 'Line_1_room'){
        emitIO_and_pushDB(msgObj, null, channelIds[0], agent_sendTo_receiver, 0);
      } else if(chanId === 'Line_2_room') {
        emitIO_and_pushDB(msgObj, null, channelIds[1], agent_sendTo_receiver, 0);
      } else {
        console.log('push to fb')
      }
    }
    else if (msg.includes('/video')) {
      msgObj.message = 'Send video to user';
      if(chanId === 'Line_1_room'){
        emitIO_and_pushDB(msgObj, null, channelIds[0], agent_sendTo_receiver, 0);
      } else if(chanId === 'Line_2_room') {
        emitIO_and_pushDB(msgObj, null, channelIds[1], agent_sendTo_receiver, 0);
      } else {
        console.log('push to fb')
      }
    }
    else if ( isUrl(msg) ) {
      let urlStr = '<a href=';
      if (msg.indexOf('https') !== -1 || msg.indexOf('http') !== -1) {
        urlStr += '"https://';
      }
      msgObj.message = urlStr + msg + '/" target="_blank">' + msg + '</a>';
      if(chanId === 'Line_1_room'){
        emitIO_and_pushDB(msgObj, null, channelIds[0], agent_sendTo_receiver, 0);
      } else if(chanId === 'Line_2_room') {
        emitIO_and_pushDB(msgObj, null, channelIds[1], agent_sendTo_receiver, 0);
      } else {
        console.log('push to fb')
      }

    }
    else if (msg.includes('/sticker')) {
      msgObj.message = 'Send sticker to user';
      if(chanId === 'Line_1_room'){
        emitIO_and_pushDB(msgObj, null, channelIds[0], agent_sendTo_receiver, 0);
      } else if(chanId === 'Line_2_room') {
        emitIO_and_pushDB(msgObj, null, channelIds[1], agent_sendTo_receiver, 0);
      } else {
        console.log('push to fb')
      }
    }
    else {
      msgObj.message = msg;
      if(chanId === 'Line_1_room'){
        emitIO_and_pushDB(msgObj, null, channelIds[0], agent_sendTo_receiver, 0);
      } else if(chanId === 'Line_2_room') {
        emitIO_and_pushDB(msgObj, null, channelIds[1], agent_sendTo_receiver, 0);
      } else if(chanId === 'FB_room') {
        emitIO_and_pushDB(msgObj, null, channelIds[2], agent_sendTo_receiver, 0);
      } else {
        console.log('push to fb')
      }
    }
  });//sent message

  socket.on('get profile', (id, callback) => {
    console.log("get profile");
    console.log(id);
    for( let i in chatData ) {
      if( chatData[i].Profile.userId == id ) {
        console.log("match!");
        socket.emit('show profile',chatData[i].Profile);
      }
    }
  });

  socket.on('update profile', (data, callback) => {
    console.log("update profile");
    for( let i in chatData ) {
      if( chatData[i].Profile.userId == data.userId ) {
        let updateObj = {};
        for( let prop in data ) {
          updateObj[prop] = data[prop];
        }
        console.log(updateObj);
        newDBRef.child(i).child("Profile").update(updateObj);
        break;
      }
    }
  });

  // socket.on('get json from agentChat', (data) => {
  //   let thisAgentData = [];
  //   for( let i in agentChatData ){
  //     if( agentChatData[i].Profile.agent.indexOf(data.id) != -1 ) thisAgentData.push( agentChatData[i] );
  //   }
  //
  //   let sendData = [];
  //   for( let i in thisAgentData ) {
  //     let msgs = thisAgentData[i].Messages;
  //     if( !msgs ) msgs = [];
  //     let position = 0;
  //     if( msgs.length>20 ) {
  //       position = msgs.length-20;
  //       msgs = msgs.slice(position);
  //     }
  //     sendData.push({
  //       Messages: msgs,
  //       position: position,
  //       Profile: thisAgentData[i].Profile
  //     });
  //   }
  //   socket.emit('push json to agentChat', sendData);
  // });

  // socket.on('upload history msg from front agentChat', data => {
  //   console.log('upload history msg of roomId = '+data.roomId+', head = '+data.head+', tail = '+data.tail);
  //   let roomId = data.roomId;
  //   let head = data.head;
  //   let tail = data.tail;
  //   let sendData = [];
  //
  //   for( let i in agentChatData ) {
  //     if( agentChatData[i].Profile.roomId === roomId ) {
  //       for( let j=head; j<tail+1; j++ ) {
  //         console.log("j = "+j);
  //         sendData.push( agentChatData[i].Messages[j] );
  //       }
  //       break;
  //     }
  //   }
  //   console.log("sendData = ");
  //   console.log(sendData);
  //   socket.emit('upload history msg from back agentChat', {
  //     roomId: roomId,
  //     messages: sendData
  //   });
  //
  // });

  // socket.on('read message agentChat', data => {
  //   for( let prop in agentChatData ) {
  //     if( agentChatData[prop].Profile.roomId === data.roomId ) {
  //       let unRead = agentChatData[prop].Profile.unRead;
  //       if( unRead ) {
  //         let pos = unRead.indexOf(data.reader);
  //         if( pos!=-1 ) unRead.splice(pos,1);
  //       }
  //       else unRead = [];
  //       agentDBRef.child(prop).child("Profile/unRead").set(unRead);
  //     }
  //   };
  // });

  // socket.on('send message agentChat', (data, callback) => {
  //   // console.log(data);
  //   let msg = data.msg.trim();
  //   let receive_room = data.roomId.trim();
  //   let nowTime = Date.now();
  //
  //   console.log(receive_room);
  //   if(socket.nickname !== undefined){
  //     agent_nickname = socket.nickname;
  //   } else {
  //     agent_nickname = 'agent';
  //   }
  //
  //   var msgObj = {
  //     name: data.sender,
  //     time: nowTime,
  //   };
  //   function emitIO_and_pushDB(obj) {
  //     console.log("sending object agent2: ");
  //     console.log(obj);
  //
  //     console.log("sending to new firebase database");
  //     sendToNewFb(obj);
  //     console.log("sending to new io sockets...");
  //     sendToFrontSocket(obj);
  //     console.log("All sent!");
  //   }
  //
  //   function sendToNewFb(obj){
  //     for( let prop in agentChatData ) {
  //       console.log("find next room data");
  //       if(agentChatData[prop].Profile.roomId == receive_room) {
  //         console.log("find the same room");
  //         let length = agentChatData[prop].Messages.length - 1;
  //         let updateObj = {};
  //         updateObj['/'+prop+'/Messages/'+length] = obj;
  //
  //         let unRead = agentChatData[prop].Profile.agent;
  //         unRead.splice( unRead.indexOf( data.sender ), 1 );
  //         updateObj['/'+prop+'/Profile/unRead'] = unRead;
  //
  //         agentDBRef.update(updateObj);
  //         flag = false;
  //         break;
  //       }
  //     }
  //   }
  //
  //   function sendToFrontSocket(obj) {
  //     obj.roomId = receive_room;
  //     io.sockets.emit('new message agentChat', obj);
  //   }
  //
  //   //------FACEBOOK-------
  //   if (msg.startsWith('<img')){
  //       msgObj.message = data.msg+'"/>';
  //       emitIO_and_pushDB(msgObj);
  //   }
  //   else if (msg.startsWith('<video')){
  //       msgObj.message = data.msg+ '" type="video/mp4"></video>';
  //       emitIO_and_pushDB(msgObj);
  //   }
  //   else if (msg.startsWith('<audio')){
  //       msgObj.message = data.msg+ '" type="audio/mpeg"></audio>';
  //       emitIO_and_pushDB(msgObj);
  //   }
  //
  //   //--------LINE--------
  //
  //    else if (msg.indexOf('.com') !== -1 || msg.indexOf('.edu') !== -1 || msg.indexOf('.net') !== -1 || msg.indexOf('.io') !== -1 || msg.indexOf('.org') !== -1) {
  //     let urlStr = '<a href=';
  //     if (msg.indexOf('https') !== -1 || msg.indexOf('http') !== -1) {
  //       urlStr += '"https://';
  //     }
  //     msgObj.message = urlStr + msg + '/" target="_blank">' + msg + '</a>';
  //     emitIO_and_pushDB(msgObj);
  //
  //   } else if (msg.includes('/sticker')) {
  //     stickerId = msg.substr( msg.indexOf(' ')+1 );
  //     msgObj.message = '<img src="https://sdl-stickershop.line.naver.jp/stickershop/v1/sticker/'+stickerId+'/android/sticker.png"' +
  //     emitIO_and_pushDB(msgObj);
  //   } else {
  //     msgObj.message = msg;
  //     emitIO_and_pushDB(msgObj);
  //   }
  // });//sent message

  // socket.on('update profile agentChat', (data, callback) => {
  //   console.log("update profile");
  //   for( let i in agentChatData ) {
  //     if( agentChatData[i].Profile.roomId == data.roomId ) {
  //       agentDBRef.child(i).child("Profile").update(data);
  //       return;
  //     }
  //   }
  //   console.log("new room come in!");
  //
  //   let nowTime = Date.now();
  //   data.firstChat = nowTime;
  //   data.recentChat = nowTime;
  //   data.unRead = JSON.parse(JSON.stringify(data.agent));
  //   data.unRead.splice(data.unRead.indexOf(data.owner),1);
  //   console.log("data: ");
  //   console.log(data);
  //
  //   agentDBRef.push({
  //     Messages: [{
  //       message: "group establish",
  //       name: "System",
  //       time: nowTime
  //     }],
  //     Profile: data
  //   });
  // });

  getTicketfromFD();
  socket.emit('all tickets info', viewTicket);
  socket.emit('all agents info', viewAgent);
  socket.emit('all contacts info', viewContact);

  // socket.on('update ticket', (data, callback) => {
  //   console.log(data) ;
  //   updateTicket(data) ;
  // });
  // socket.on('get ticket', (data ,callback) => {
  //   console.log(data) ;
  //   getUserTicket(data);

  // });
  function getUserTicket(data) {
    var email = data.email ;
    var id = data.id ;
    var URL_ticket =  "https://" + FD_ENDPOINT + ".freshdesk.com/api/v2/tickets?email="+email;
    var viewRequest_ticket = unirest.get(URL_ticket);

    viewRequest_ticket.auth({
      user: API_KEY,
      pass: "X",
      sendImmediately: true
    })
    .end(function(response){
      console.log("Ticket Response Status : " + response.status)
      if(response.status != 200){
        console.log("X-Request-Id :" + response.headers['x-request-id']);
        return ;
      }
      socket.emit('push user ticket',{
        id: id,
        ticket: response.body
      });
    });
  }

  socket.on('disconnect', (data) => {
    if (!socket.nickname) return;
    delete users[socket.nickname];
  });
});


// FUNCTION //

function emitIO_and_pushDB(obj, pictureUrl, channelId, receiverId, unRead) {
  console.log("CCOORRECT EMIT");
  console.log("");
  console.log("sending object: ");
  console.log(obj);
  console.log("(channelId, receiverId) = (" + channelId + ", " + receiverId + ")");

  console.log("sending to firebase database...");
  send_to_firebase(obj, pictureUrl, channelId, receiverId, unRead);
}

function send_to_firebase(obj, pictureUrl, channelId, receiverId, unRead){
  let flag = true;
  let count_unread = unRead;    //0 or 1
  for( let prop in chatData ) {
    let data = chatData[prop];
    if( data.Profile.channelId===channelId && data.Profile.userId===receiverId) {
      console.log("find user in database");
      let length = data.Messages.length;
      count_unread += data.Profile.unRead;
      let updateObj = {};
      updateObj['/'+prop+'/Messages/'+length] = obj;
      updateObj['/'+prop+'/Profile/unRead'] = count_unread;
      if( pictureUrl ) updateObj['/'+prop+'/Profile/pictureUrl'] = pictureUrl;
      newDBRef.update(updateObj);

      console.log('finish update db. chatData[prop] = ');
      console.log(data);

      flag = false;
      break;
    }
  }
  if( flag ) {
    console.log("new user come in");
    let newData = {
      Profile: {
        nickname: obj.name,
        userId: receiverId,
        channelId: channelId,
        age: -1,
        telephone: "",
        address: "",
        firstChat: Date.now(),
        首次聊天時間: Date.now(),
        recentChat: Date.now(),
        上次聊天時間: Date.now(),
        totalChat: 1,
        總共聊天時間: 1,
        avgChat: 1,
        平均每次聊天時間: 1,
        聊天次數: 1,
        unRead: 1,
        photo: pictureUrl? pictureUrl :""
      },
      Messages: [obj]
    };
    newDBRef.push(newData);
    io.sockets.emit('new user profile', newData.Profile);
  }

  console.log("sending to io sockets...");
  send_to_frontSocket(obj, pictureUrl, channelId, receiverId, count_unread);

}

function send_to_frontSocket(obj, pictureUrl, channelId, receiverId, unRead) {
  let data = JSON.parse(JSON.stringify(obj));
  data.unRead = unRead;
  data.channelId = channelId;
  data.id = receiverId;
  data.pictureUrl = pictureUrl;
  console.log('push to front object: ');
  console.log(data);
  io.sockets.emit('new message', data);

  console.log("All sent!");
}

function loadFbProfile(obj, psid) {

    fb_bot.webhook('/webhook');
    fb_bot.getProfile(psid).then(function(data) {

        var fb_user_name = data.first_name + ' ' + data.last_name;
        var fb_user_profilePic = data.profile_pic;
        var fb_user_locale = data.locale;
        var fb_user_gender = data.gender;

        if (obj.message.attachments) {
            //Checking if there are any image attachments
            if (obj.message.attachments[0].type === "image") {
                var imageURL = obj.message.attachments[0].payload.url;
                obj.message = '<img src="' + imageURL + '"/>';
            } //if image
            else if (obj.message.attachments[0].type === "video") {
                var videoURL = obj.message.attachments[0].payload.url;
                obj.message = '<video controls><source src="' + videoURL + '" type="video/mp4"></video>';

            } //if video
            else if (obj.message.attachments[0].type === "audio") {
                var audioURL = obj.message.attachments[0].payload.url;
                obj.message = '<audio controls><source src="' + audioURL + '" type="audio/mpeg"/></audio>';

            } //if audio
            else if (obj.message.attachments[0].type === "file") {
                var fileURL = obj.message.attachments[0].payload.url;
                obj.message = 'The user sent a file, click <a target="blank" href="' + fileURL + '">HERE</a> for download.';

            } //if audio
            else if (obj.message.attachments[0].type === "location") {
                var locateURL = obj.message.attachments[0].url;
                obj.message = 'The user sent a location, click <a target="blank" href="' + locateURL + '">HERE</a> for map link.';

            } //if location
        } else {
            obj.message = obj.message.text;

        }

        for (let prop in chatData) {
            if (chatData[prop].Profile.userId == obj.sender.id) {
                var count_unread_toFront = chatData[prop].Profile.unRead;
                count_unread_toFront++;

            }
        } //for let prop in chatData

        obj.id = obj.sender.id;
        obj.owner = obj.recipient.id;
        obj.name = fb_user_name;
        obj.time = obj.timestamp;
        obj.unRead = count_unread_toFront;
        obj.channelId = 'FB';
        obj.pictureUrl = fb_user_profilePic;
        io.sockets.emit('new message', obj);


        //======receive message==========

        var senderID = obj.sender.id;
        var recipientID = obj.recipient.id;
        var timeOfMessage = obj.timestamp;
        var message_text = obj.message;



        console.log("Received message for user %d and page %d at %d with message:",
            senderID, recipientID, timeOfMessage);
        console.log(JSON.stringify(obj.message));

        //===========================================

        //=============saving to database============
        let message_lineTochat = message_text;
        let receiverId = senderID;
        let receiver_name = fb_user_name;
        let nowTime = Date.now();


        var msgObj = {
            owner: "user",
            name: receiver_name,
            time: nowTime,
            message: message_lineTochat,
            id: receiverId,
            prof_pic: fb_user_profilePic,
            locale: fb_user_locale,
            gend: fb_user_gender
        };


        function emitIO_and_pushDB(obj) {

            console.log("sending object user: ");
            console.log(obj);

            console.log("sending to new firebase database");
            sendToNewFb(obj);
            console.log("sending to new io sockets...");
            console.log("All sent!");
        }

        function sendToNewFb(obj) {
            let flag = true;
            for (let prop in chatData) {
                if (chatData[prop].Profile.userId == receiverId) {
                    console.log("find user " + receiverId + " in database");
                    var count_unread = chatData[prop].Profile.unRead;
                    count_unread++;
                    let length = chatData[prop].Messages.length;
                    let updateObj = {};
                    updateObj['/' + prop + '/Messages/' + length] = obj;
                    newDBRef.update(updateObj);
                    newDBRef.child(prop).child("Profile").update({
                        unRead: count_unread,
                        photo: obj.prof_pic
                    });

                    flag = false;
                    break;
                }
            }
            if (flag) {
                console.log("new user come in");

                let newData = {
                    Profile: {
                        nickname: obj.name,
                        userId: obj.id,
                        age: -1,
                        地區: obj.locale,
                        性別: obj.gend,
                        telephone: "",
                        address: "",
                        firstChat: nowTime,
                        首次聊天時間: nowTime,
                        recentChat: nowTime,
                        上次聊天時間: nowTime,
                        totalChat: 1,
                        總共聊天時間: 1,
                        avgChat: 1,
                        平均每次聊天時間: 1,
                        聊天次數: 1,
                        unRead: 1,
                        photo: obj.prof_pic
                    },
                    Messages: [obj]
                };
                newDBRef.push(newData);
                io.sockets.emit('new user profile', newData.Profile);
            }
        } //sendTONewFb

        emitIO_and_pushDB(msgObj);



    }).catch(function(error) {
        console.log('on line 295 error');
    }); //fb_bot

} //loadFbProfile


//==================ticket=======================

function getTicketfromFD() {

  var URL_ticket =  "https://" + FD_ENDPOINT + ".freshdesk.com/api/v2/tickets";
  var URL_agent = "https://" + FD_ENDPOINT + ".freshdesk.com/api/v2/agents"
  var URL_contact = "https://" + FD_ENDPOINT + ".freshdesk.com/api/v2/contacts"

  var viewRequest_contact = unirest.get(URL_contact);

  viewRequest_contact.auth({
    user: API_KEY,
    pass: "X",
    sendImmediately: true
  })
  .end(function(response){
    viewContact = response.body;
    console.log("Contact Response Status : " + response.status)
    if(response.status != 200){
      console.log("X-Request-Id :" + response.headers['x-request-id']);
    }
  });


  var viewRequest_agent = unirest.get(URL_agent);

  viewRequest_agent.auth({
    user: API_KEY,
    pass: "X",
    sendImmediately: true
  })
  .end(function(response){
    viewAgent = response.body;
    console.log("Agent Response Status : " + response.status)
    if(response.status != 200){
      console.log("X-Request-Id :" + response.headers['x-request-id']);
    }
  });


  var viewRequest_ticket = unirest.get(URL_ticket);

  viewRequest_ticket.auth({
    user: API_KEY,
    pass: "X",
    sendImmediately: true
  })
  .end(function(response){
    viewTicket = response.body;
    console.log("Ticket Response Status : " + response.status)
    if(response.status != 200){
      console.log("X-Request-Id :" + response.headers['x-request-id']);
    }
  });
}
//-----------------------ticket---------------------*/


function isUrl(str) {
  if(str.indexOf('.com') !== -1 ) return true;
  else if(str.indexOf('.edu') !== -1 ) return true;
  else if(str.indexOf('.net') !== -1 ) return true;
  else if(str.indexOf('.io') !== -1 ) return true;
  else if(str.indexOf('.org') !== -1 ) return true;
  return false;
}


function vote(voter, time, categoryName, workerName, groupName, score) {
    console.log(time);
    let categoryId;
    let workerId;
    let groupId;

    let timer = setInterval(insert_vote, 10);
    //因前面幾個資料庫操作是異步操作 可能會發生還沒抓完資料就繼續執行的情況
    //所以用setInterval包起來，確認值都有收到後，再寫進資料庫並停止setInterval
    function insert_vote() {
        if (!categoryId || !workerId || !groupId) return;
        clearInterval(timer);
        let obj = {
            vote_voter: voter,
            vote_time: time,
            category_id: categoryId,
            worker_id: workerId,
            group_id: groupId,
            vote_score: score
        };
        console.log("to insert obj = ");
        console.log(obj);

        // con.query("INSERT INTO shield.vote SET ? ", obj, function(err, rows) {
        //     if (err) {
        //         console.log("ERROR INSERT VOTE");
        //         throw err;
        //     } else {
        //         console.log("SUCCESS INSERT VOTE! obj =");
        //         console.log(obj);
        //     } //end else
        // }); //end con.query
    } //end insert_vote
}

// EXPRESS functions and app use, KEEP THEM AT THE BOTTOM
// catch 404 and forward to error handler
app.use(function(req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

/**
* Normalize a port into a number, string, or false.
*/

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
* Event listener for HTTP server "error" event.
*/

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string' ?
  'Pipe ' + port :
  'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
    console.error(bind + ' requires elevated privileges');
    process.exit(1);
    break;
    case 'EADDRINUSE':
    console.error(bind + ' is already in use');
    process.exit(1);
    break;
    default:
    throw error;
  }
}

/**
* Event listener for HTTP server "listening" event.
*/

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string' ?
  'pipe ' + addr :
  'port ' + addr.port;
  debug('Listening on ' + bind);
}
